{"ast":null,"code":"var _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/config/PrefixConfig.js\";\nimport React, { useState, useContext } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { AppContext } from '../../../../../../../App';\nimport { AssistContext } from '../../../../../Assistant';\nimport { getPrefix } from '../../../../../../../utils/prefixUtils';\nimport Properties from '../../../../../../../conf/properties';\n\nfunction PrefixConfig(props) {\n  const context = useContext(AppContext);\n  const assistContext = useContext(AssistContext);\n  const entity = props.entity,\n        isPrefixOpen = props.isPrefixOpen,\n        prefix = props.prefix,\n        setPrefix = props.setPrefix;\n  const shapeStyles = Properties.getInstance().getShapeStyle();\n  const tripleStyles = Properties.getInstance().getTripleStyle();\n  const styles = entity.triples ? shapeStyles : tripleStyles; //is a Shape or a Triple?\n\n  const handlePrefixChange = function (e) {\n    let prefix = getPrefix(e.target.value);\n    entity.type.setPrefix(prefix);\n    context.emit();\n    setPrefix(e.target.value);\n  };\n\n  return React.createElement(Collapse, {\n    isOpen: isPrefixOpen,\n    className: \"xs-gridBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"customLabel\",\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Prefix \"), React.createElement(\"select\", {\n    className: \"customSelector\",\n    value: prefix,\n    onChange: handlePrefixChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"example\"), context.prefixes.map(pre => {\n    if (pre.prefixName != '') {\n      return React.createElement(\"option\", {\n        key: pre.id,\n        value: pre.prefixValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, pre.prefixName);\n    }\n  })));\n}\n\nexport default PrefixConfig;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/config/PrefixConfig.js"],"names":["React","useState","useContext","Collapse","AppContext","AssistContext","getPrefix","Properties","PrefixConfig","props","context","assistContext","entity","isPrefixOpen","prefix","setPrefix","shapeStyles","getInstance","getShapeStyle","tripleStyles","getTripleStyle","styles","triples","handlePrefixChange","e","target","value","type","emit","label","prefixes","map","pre","prefixName","id","prefixValue"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAAQC,SAAR,QAAwB,wCAAxB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;;AAEA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAE1B,QAAMC,OAAO,GAAGR,UAAU,CAACE,UAAD,CAA1B;AACA,QAAMO,aAAa,GAAGT,UAAU,CAACG,aAAD,CAAhC;AAH0B,QAInBO,MAJmB,GAIqBH,KAJrB,CAInBG,MAJmB;AAAA,QAIZC,YAJY,GAIqBJ,KAJrB,CAIZI,YAJY;AAAA,QAICC,MAJD,GAIqBL,KAJrB,CAICK,MAJD;AAAA,QAIQC,SAJR,GAIqBN,KAJrB,CAIQM,SAJR;AAK1B,QAAMC,WAAW,GAAGT,UAAU,CAACU,WAAX,GAAyBC,aAAzB,EAApB;AACA,QAAMC,YAAY,GAAGZ,UAAU,CAACU,WAAX,GAAyBG,cAAzB,EAArB;AACA,QAAMC,MAAM,GAAGT,MAAM,CAACU,OAAP,GAAiBN,WAAjB,GAA+BG,YAA9C,CAP0B,CAOkC;;AAE5D,QAAMI,kBAAkB,GAAG,UAASC,CAAT,EAAW;AAClC,QAAIV,MAAM,GAAGR,SAAS,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB;AACAd,IAAAA,MAAM,CAACe,IAAP,CAAYZ,SAAZ,CAAsBD,MAAtB;AACAJ,IAAAA,OAAO,CAACkB,IAAR;AACAb,IAAAA,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GALD;;AAOA,SACK,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEb,YAAlB;AAAgC,IAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,KAAK,EAAEQ,MAAM,CAACQ,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,EAEG;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,KAAK,EAAEf,MAA1C;AAAkD,IAAA,QAAQ,EAAES,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAGIb,OAAO,CAACoB,QAAR,CAAiBC,GAAjB,CAAsBC,GAAD,IAAQ;AACzB,QAAGA,GAAG,CAACC,UAAJ,IAAgB,EAAnB,EAAsB;AAClB,aAAO;AAAQ,QAAA,GAAG,EAAED,GAAG,CAACE,EAAjB;AAAqB,QAAA,KAAK,EAAEF,GAAG,CAACG,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8CH,GAAG,CAACC,UAAlD,CAAP;AACH;AACJ,GAJD,CAHJ,CAFH,CADL;AAiBH;;AAED,eAAezB,YAAf","sourcesContent":["import React,{useState,useContext} from 'react';\nimport { Collapse } from 'reactstrap';\nimport {AppContext} from '../../../../../../../App';\nimport {AssistContext} from '../../../../../Assistant';\nimport {getPrefix} from '../../../../../../../utils/prefixUtils';\nimport Properties from '../../../../../../../conf/properties';\n\nfunction PrefixConfig (props) {\n\n    const context = useContext(AppContext);\n    const assistContext = useContext(AssistContext);\n    const {entity,isPrefixOpen,prefix,setPrefix} = props;\n    const shapeStyles = Properties.getInstance().getShapeStyle();\n    const tripleStyles = Properties.getInstance().getTripleStyle();\n    const styles = entity.triples ? shapeStyles : tripleStyles; //is a Shape or a Triple?\n\n    const handlePrefixChange = function(e){\n        let prefix = getPrefix(e.target.value);\n        entity.type.setPrefix(prefix);\n        context.emit();\n        setPrefix(e.target.value);\n    }\n\n    return (\n         <Collapse isOpen={isPrefixOpen} className=\"xs-gridBox\">\n            <label className=\"customLabel\" style={styles.label}>Prefix </label>\n            <select className=\"customSelector\" value={prefix} onChange={handlePrefixChange}>\n                <option value=\"example\">example</option>\n                { \n                context.prefixes.map((pre) =>{\n                    if(pre.prefixName!=''){\n                        return <option key={pre.id} value={pre.prefixValue}>{pre.prefixName}</option>\n                    }                        \n                })\n            }\n            </select>\n         </Collapse>\n    );\n                                   \n    \n}\n\nexport default PrefixConfig;\n\n"]},"metadata":{},"sourceType":"module"}