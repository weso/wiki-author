{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport cx from 'classnames';\nimport getMenuItemId from './getMenuItemId';\n\nvar getInputProps = function getInputProps(_ref) {\n  var activeIndex = _ref.activeIndex,\n      id = _ref.id,\n      isFocused = _ref.isFocused,\n      isMenuShown = _ref.isMenuShown,\n      multiple = _ref.multiple,\n      onFocus = _ref.onFocus,\n      placeholder = _ref.placeholder,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"activeIndex\", \"id\", \"isFocused\", \"isMenuShown\", \"multiple\", \"onFocus\", \"placeholder\"]);\n\n  return function (_temp) {\n    var _cx;\n\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        className = _ref2.className,\n        inputProps = _objectWithoutPropertiesLoose(_ref2, [\"className\"]);\n\n    var props = _extends({\n      /* eslint-disable sort-keys */\n      // These props can be overridden by values in `inputProps`.\n      autoComplete: 'off',\n      placeholder: placeholder,\n      type: 'text'\n    }, inputProps, {}, rest, {\n      'aria-activedescendant': activeIndex >= 0 ? getMenuItemId(id, activeIndex) : undefined,\n      'aria-autocomplete': 'both',\n      'aria-expanded': isMenuShown,\n      'aria-haspopup': 'listbox',\n      'aria-owns': isMenuShown ? id : undefined,\n      className: cx((_cx = {}, _cx[className || ''] = !multiple, _cx.focus = isFocused, _cx)),\n      // Re-open the menu, eg: if it's closed via ESC.\n      onClick: onFocus,\n      onFocus: onFocus,\n      // Comboboxes are single-select by definition:\n      // https://www.w3.org/TR/wai-aria-practices-1.1/#combobox\n      role: 'combobox'\n      /* eslint-enable sort-keys */\n\n    });\n\n    if (!multiple) {\n      return props;\n    }\n\n    return _extends({}, props, {\n      'aria-autocomplete': 'list',\n      'aria-expanded': undefined,\n      inputClassName: className,\n      role: undefined\n    });\n  };\n};\n\nexport default getInputProps;","map":null,"metadata":{},"sourceType":"module"}