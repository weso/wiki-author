{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/CustomComp.js\";\nimport React, { useState, useContext } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { AppContext } from '../../../../../../App';\nimport TypeConfig from './config/TypeConfig';\nimport PrefixConfig from './config/PrefixConfig';\nimport QualifierConfig from './config/QualifierConfig';\nimport Properties from '../../../../../../conf/properties';\nimport '../../../../../../css/shexComponents/customize/Custom.css';\n\nfunction CustomComp(props) {\n  const context = useContext(AppContext);\n  const entity = props.entity,\n        isCustomOpen = props.isCustomOpen,\n        qualifier = props.qualifier,\n        bnode = props.bnode,\n        customClass = props.customClass;\n  const shapeStyles = Properties.getInstance().getShapeStyle();\n  const tripleStyles = Properties.getInstance().getTripleStyle();\n  const styles = customClass == 'customShape' ? shapeStyles : tripleStyles;\n  let initialPrefix = 'example';\n  let initialOpenPrefix = false;\n\n  if (entity.type.prefix != undefined) {\n    initialPrefix = entity.type.prefix.prefixValue;\n    initialOpenPrefix = true;\n  }\n\n  const _useState = useState(initialPrefix),\n        _useState2 = _slicedToArray(_useState, 2),\n        prefix = _useState2[0],\n        setPrefix = _useState2[1];\n\n  const _useState3 = useState(initialOpenPrefix),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isPrefixOpen = _useState4[0],\n        setPrefixOpen = _useState4[1];\n\n  const collapsePrefix = function (e) {\n    if (e.target.value == 'prefixedIri') {\n      setPrefixOpen(true);\n    } else {\n      setPrefixOpen(false);\n    }\n  };\n\n  return React.createElement(Collapse, {\n    isOpen: isCustomOpen,\n    className: \"customColapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: customClass,\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TypeConfig, {\n    entity: entity,\n    setPrefix: setPrefix,\n    collapsePrefix: collapsePrefix,\n    bnode: bnode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(PrefixConfig, {\n    entity: entity,\n    isPrefixOpen: isPrefixOpen,\n    prefix: prefix,\n    setPrefix: setPrefix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Qualifier, {\n    isQualifier: qualifier,\n    entity: entity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n}\n\nfunction Qualifier(props) {\n  const isQualifier = props.isQualifier,\n        entity = props.entity;\n\n  if (isQualifier) {\n    return React.createElement(QualifierConfig, {\n      shape: entity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  return null;\n}\n\nexport default CustomComp;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/CustomComp.js"],"names":["React","useState","useContext","Collapse","AppContext","TypeConfig","PrefixConfig","QualifierConfig","Properties","CustomComp","props","context","entity","isCustomOpen","qualifier","bnode","customClass","shapeStyles","getInstance","getShapeStyle","tripleStyles","getTripleStyle","styles","initialPrefix","initialOpenPrefix","type","prefix","undefined","prefixValue","setPrefix","isPrefixOpen","setPrefixOpen","collapsePrefix","e","target","value","body","Qualifier","isQualifier"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react';\nimport { Collapse } from 'reactstrap';\nimport {AppContext} from '../../../../../../App';\nimport TypeConfig from './config/TypeConfig';\nimport PrefixConfig from './config/PrefixConfig';\nimport QualifierConfig from './config/QualifierConfig';\nimport Properties from '../../../../../../conf/properties';\nimport '../../../../../../css/shexComponents/customize/Custom.css'\n\nfunction CustomComp (props) {\n\n    const context = useContext(AppContext);\n    const {entity,isCustomOpen,qualifier,bnode,customClass} = props;\n    const shapeStyles = Properties.getInstance().getShapeStyle();\n    const tripleStyles = Properties.getInstance().getTripleStyle();\n    const styles = customClass == 'customShape' ? shapeStyles:tripleStyles;\n\n    let initialPrefix = 'example';\n    let initialOpenPrefix = false;\n    if(entity.type.prefix!=undefined){\n        initialPrefix = entity.type.prefix.prefixValue;\n        initialOpenPrefix = true;\n    }\n\n    const [prefix,setPrefix] = useState(initialPrefix);\n    const [isPrefixOpen,setPrefixOpen] = useState(initialOpenPrefix);\n \n    const collapsePrefix = function(e){\n        if(e.target.value=='prefixedIri'){\n            setPrefixOpen(true);\n        }else{\n            setPrefixOpen(false);\n        }    \n    }\n\n\n    return (\n        <Collapse isOpen={isCustomOpen}\n                  className='customColapse'>\n\n            <div className={customClass} style={styles.body}>\n                <TypeConfig \n                    entity={entity}\n                    setPrefix={setPrefix}\n                    collapsePrefix={collapsePrefix}\n                    bnode={bnode}/>\n               \n                <PrefixConfig \n                    entity={entity}\n                    isPrefixOpen={isPrefixOpen}\n                    prefix={prefix}\n                    setPrefix={setPrefix}/> \n\n                 <Qualifier \n                    isQualifier={qualifier}\n                    entity={entity}/>              \n            </div>\n        </Collapse>                 \n    );\n                                   \n    \n}\n\nfunction Qualifier(props) {\n  const {isQualifier,entity} = props;\n  if (isQualifier) {\n    return (<QualifierConfig shape={entity}/>)\n  }\n  return null;\n}\n\n\nexport default CustomComp;\n\n"]},"metadata":{},"sourceType":"module"}