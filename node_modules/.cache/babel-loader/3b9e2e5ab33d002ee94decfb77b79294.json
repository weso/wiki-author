{"ast":null,"code":"var idCounter = 0;\nexport function head(arr) {\n  return Array.isArray(arr) && arr.length ? arr[0] : undefined;\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isString(value) {\n  return typeof value === 'string';\n}\nexport function noop() {}\nexport function pick(obj, keys) {\n  var result = {};\n  keys.forEach(function (k) {\n    if (Object.prototype.hasOwnProperty.call(obj, k)) {\n      result[k] = obj[k];\n    }\n  });\n  return result;\n}\nexport function uniqueId(prefix) {\n  idCounter += 1;\n  return (prefix == null ? '' : String(prefix)) + idCounter;\n} // Export for testing purposes.\n\nexport function valuesPolyfill(obj) {\n  return Object.keys(obj).reduce(function (accum, key) {\n    if (Object.prototype.propertyIsEnumerable.call(obj, key)) {\n      accum.push(obj[key]);\n    }\n\n    return accum;\n  }, []);\n}\nexport function values(obj) {\n  return isFunction(Object.values) ? Object.values(obj) : valuesPolyfill(obj);\n}","map":null,"metadata":{},"sourceType":"module"}