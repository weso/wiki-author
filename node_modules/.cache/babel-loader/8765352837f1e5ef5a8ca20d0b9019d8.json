{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/constraint/valueSetValues/BooleanValue.js\";\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../../../../../../../../App';\nimport { Collapse } from 'reactstrap';\n\nfunction BooleanValue(props) {\n  const type = props.type,\n        isOpen = props.isOpen;\n  const context = useContext(AppContext);\n\n  const _useState = useState(type.value),\n        _useState2 = _slicedToArray(_useState, 2),\n        boolean = _useState2[0],\n        setBoolean = _useState2[1];\n\n  const handleBooleanChange = function (e) {\n    let newBoolean = e.target.value;\n    type.setValue(newBoolean);\n    context.emit();\n    setBoolean(newBoolean);\n  };\n\n  return React.createElement(Collapse, {\n    isOpen: isOpen,\n    className: \"imputSetCollapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"customSelector boolSelect\",\n    value: boolean,\n    onChange: handleBooleanChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"True\"), React.createElement(\"option\", {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"False\")));\n}\n\nexport default BooleanValue;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/constraint/valueSetValues/BooleanValue.js"],"names":["React","useState","useContext","AppContext","Collapse","BooleanValue","props","type","isOpen","context","value","boolean","setBoolean","handleBooleanChange","e","newBoolean","target","setValue","emit"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA,QAEnBC,IAFmB,GAEJD,KAFI,CAEnBC,IAFmB;AAAA,QAEdC,MAFc,GAEJF,KAFI,CAEdE,MAFc;AAG1B,QAAMC,OAAO,GAAGP,UAAU,CAACC,UAAD,CAA1B;;AAH0B,oBAICF,QAAQ,CAACM,IAAI,CAACG,KAAN,CAJT;AAAA;AAAA,QAInBC,OAJmB;AAAA,QAIXC,UAJW;;AAM1B,QAAMC,mBAAmB,GAAG,UAASC,CAAT,EAAW;AACnC,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASN,KAA1B;AACAH,IAAAA,IAAI,CAACU,QAAL,CAAcF,UAAd;AACAN,IAAAA,OAAO,CAACS,IAAR;AACAN,IAAAA,UAAU,CAACG,UAAD,CAAV;AACH,GALD;;AAOA,SAAQ,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEP,MAAlB;AAA0B,IAAA,SAAS,EAAC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AACQ,IAAA,KAAK,EAAEG,OADf;AAEQ,IAAA,QAAQ,EAAEE,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ,CAAR;AAQH;;AAID,eAAeR,YAAf","sourcesContent":["import React,{useState,useContext} from 'react';\nimport {AppContext} from '../../../../../../../../App';\nimport { Collapse } from 'reactstrap';\n\nfunction BooleanValue (props) {\n    \n    const {type,isOpen} = props;\n    const context = useContext(AppContext);\n    const [boolean,setBoolean]=useState(type.value);\n\n    const handleBooleanChange = function(e){\n        let newBoolean = e.target.value;\n        type.setValue(newBoolean);\n        context.emit();\n        setBoolean(newBoolean);\n    }\n\n    return (<Collapse isOpen={isOpen} className='imputSetCollapse'>\n                <select className=\"customSelector boolSelect\"\n                        value={boolean}\n                        onChange={handleBooleanChange}>\n                    <option value=\"true\">True</option>\n                    <option value=\"false\">False</option>\n                </select>\n            </Collapse>);                          \n}\n\n\n\nexport default BooleanValue;\n"]},"metadata":{},"sourceType":"module"}