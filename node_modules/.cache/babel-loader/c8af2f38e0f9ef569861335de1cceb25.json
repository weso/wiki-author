{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/CardinalityComp.js\";\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../../../../../../App';\nimport { Collapse } from 'reactstrap';\nimport NumericInput from 'react-numeric-input';\nimport Properties from '../../../../../../conf/properties';\n\nfunction CardinalityComp(props) {\n  const triple = props.triple;\n  const context = useContext(AppContext);\n  const styles = Properties.getInstance().getCardinalityStyle();\n  let cardValue = triple.cardinality.getCardType();\n  let initialExactly = false;\n  let initialRange = false;\n  let initialMin = 1;\n  let initialMax = 10;\n\n  if (cardValue.length > 1) {\n    //not simple card\n    initialMin = triple.cardinality.min;\n\n    if (cardValue == 'exactly' || cardValue == 'minLimit') {\n      initialExactly = true;\n    }\n\n    if (cardValue == 'range') {\n      initialRange = true;\n      initialMax = triple.cardinality.max;\n    }\n  }\n\n  const _useState = useState(cardValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        cardinality = _useState2[0],\n        setCardinality = _useState2[1];\n\n  const _useState3 = useState(initialExactly),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isExactly = _useState4[0],\n        setExactly = _useState4[1];\n\n  const _useState5 = useState(initialRange),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isRange = _useState6[0],\n        setRange = _useState6[1];\n\n  const _useState7 = useState(initialMin),\n        _useState8 = _slicedToArray(_useState7, 2),\n        min = _useState8[0],\n        setMin = _useState8[1];\n\n  const _useState9 = useState(initialMax),\n        _useState10 = _slicedToArray(_useState9, 2),\n        max = _useState10[0],\n        setMax = _useState10[1];\n\n  const handleCardinalityChange = function (e) {\n    let newCardinality = e.target.value;\n    triple.setCardinality(newCardinality);\n    context.emit();\n    setCardinality(newCardinality);\n    setExactly(false);\n    setRange(false);\n    checkCollapses(newCardinality);\n  };\n\n  const checkCollapses = function (card) {\n    if (card == 'exactly' || card == 'minLimit') {\n      setMin(1);\n      setExactly(true);\n    }\n\n    if (card == 'range') {\n      setMin(1);\n      setMax(10);\n      setRange(true);\n    }\n  };\n\n  const handleMinChange = function (valueAsNumber, kind) {\n    triple.setCardinality(kind, valueAsNumber, max);\n    context.emit();\n    setMin(valueAsNumber);\n  };\n\n  const handleMaxChange = function (valueAsNumber) {\n    triple.setCardinality('range', min, valueAsNumber);\n    context.emit();\n    setMax(valueAsNumber);\n  };\n\n  return React.createElement(\"div\", {\n    className: \" xs-gridBox\",\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"gridLabel\",\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Cardinality\"), React.createElement(\"select\", {\n    className: \"customSelector\",\n    value: cardinality,\n    onChange: handleCardinalityChange,\n    title: \"Cardinality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Exactly one\"), React.createElement(\"option\", {\n    value: \"*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Zero or more\"), React.createElement(\"option\", {\n    value: \"+\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"One at least\"), React.createElement(\"option\", {\n    value: \"?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"One or none\"), React.createElement(\"option\", {\n    value: \"exactly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Exactly value\"), React.createElement(\"option\", {\n    value: \"minLimit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Inferior Limit\"), React.createElement(\"option\", {\n    value: \"range\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Range\")), React.createElement(Collapse, {\n    isOpen: isExactly,\n    className: \"rangeCardinality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"tripleNameLabel\",\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Value\"), React.createElement(NumericInput, {\n    className: \"form-control\",\n    min: 0,\n    value: min,\n    onChange: value => {\n      handleMinChange(value, cardinality);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(Collapse, {\n    isOpen: isRange,\n    className: \"rangeCardinality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"tripleNameLabel\",\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Min\"), React.createElement(NumericInput, {\n    className: \"form-control\",\n    min: 0,\n    value: min,\n    onChange: value => {\n      handleMinChange(value, 'range');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"tripleNameLabel\",\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Max\"), React.createElement(NumericInput, {\n    className: \"form-control\",\n    min: 0,\n    value: max,\n    onChange: handleMaxChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n}\n\nexport default CardinalityComp;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/CardinalityComp.js"],"names":["React","useState","useContext","AppContext","Collapse","NumericInput","Properties","CardinalityComp","props","triple","context","styles","getInstance","getCardinalityStyle","cardValue","cardinality","getCardType","initialExactly","initialRange","initialMin","initialMax","length","min","max","setCardinality","isExactly","setExactly","isRange","setRange","setMin","setMax","handleCardinalityChange","e","newCardinality","target","value","emit","checkCollapses","card","handleMinChange","valueAsNumber","kind","handleMaxChange","body","label"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react';\nimport {AppContext} from '../../../../../../App';\nimport { Collapse } from 'reactstrap';\nimport NumericInput from 'react-numeric-input';\nimport Properties from '../../../../../../conf/properties';\n\nfunction CardinalityComp (props) {\n    \n        const {triple} = props;\n        const context = useContext(AppContext);\n        const styles = Properties.getInstance().getCardinalityStyle();\n\n        let cardValue = triple.cardinality.getCardType();\n        let initialExactly = false;\n        let initialRange = false;\n        let initialMin = 1;\n        let initialMax = 10;\n        if(cardValue.length>1){ //not simple card\n                initialMin = triple.cardinality.min;\n                if(cardValue == 'exactly' || cardValue == 'minLimit'){\n                        initialExactly = true;\n                }\n                if(cardValue == 'range'){\n                        initialRange = true;\n                        initialMax = triple.cardinality.max;\n                }\n                \n         \n        }\n\n        const [cardinality,setCardinality] = useState(cardValue);\n        const [isExactly,setExactly] = useState(initialExactly);\n        const [isRange,setRange] = useState(initialRange);\n        const [min,setMin] = useState(initialMin);\n        const [max,setMax] = useState(initialMax);\n\n        const handleCardinalityChange = function(e){\n                let newCardinality = e.target.value;\n                triple.setCardinality(newCardinality);\n                context.emit();\n                setCardinality(newCardinality)\n                setExactly(false);\n                setRange(false);\n                checkCollapses(newCardinality);\n        }\n\n        const checkCollapses = function(card){\n                if(card == 'exactly' || card == 'minLimit' ){\n                        setMin(1);\n                        setExactly(true);\n                }\n\n                if(card == 'range'){\n                        setMin(1);\n                        setMax(10);\n                        setRange(true);\n                }\n        }\n\n\n\n        const handleMinChange = function(valueAsNumber,kind){\n                triple.setCardinality(kind,valueAsNumber,max);\n                context.emit();\n                setMin(valueAsNumber);\n        }\n\n        const handleMaxChange = function(valueAsNumber){\n                triple.setCardinality('range',min,valueAsNumber);\n                context.emit();\n                setMax(valueAsNumber);\n        }\n\n        return ( \n                <div className=\" xs-gridBox\" style={styles.body}>\n                        <label className='gridLabel' style={styles.label}>Cardinality</label>\n                        <select className=\"customSelector\" \n                                value={cardinality} \n                                onChange={handleCardinalityChange} \n                                title=\"Cardinality\">\n                                <option value=\"\">Exactly one</option>\n                                <option value=\"*\">Zero or more</option>\n                                <option value=\"+\">One at least</option>\n                                <option value=\"?\">One or none</option>\n                                <option value=\"exactly\">Exactly value</option>\n                                <option value=\"minLimit\">Inferior Limit</option>\n                                <option value=\"range\">Range</option>\n                        </select> \n\n                    \n                        <Collapse isOpen={isExactly} className=\"rangeCardinality\">\n                                <label className=\"tripleNameLabel\" style={styles.label}>Value</label>\n                                <NumericInput   className=\"form-control\" \n                                                min={0} \n                                                value={min}\n                                                onChange={(value)=>{handleMinChange(value,cardinality)}}/>\n                        </Collapse> \n\n                        \n                        <Collapse isOpen={isRange} className=\"rangeCardinality\">\n                                <label className=\"tripleNameLabel\" style={styles.label}>Min</label>\n                                <NumericInput   className=\"form-control\" \n                                                min={0} \n                                                value={min}\n                                                onChange={(value)=>{handleMinChange(value,'range')}}/>\n\n                                <label className=\"tripleNameLabel\" style={styles.label}>Max</label>\n                                <NumericInput   className=\"form-control\" \n                                                min={0} \n                                                value={max}\n                                                onChange={handleMaxChange}/>\n\n                        </Collapse> \n\n                </div>);                          \n}\n\n\n\nexport default CardinalityComp;\n\n"]},"metadata":{},"sourceType":"module"}