{"ast":null,"code":"var imgs = require(\"./imgs.js\"),\n    yutils = require(\"yasgui-utils\"),\n    utils = require(\"./baseUtils.js\"),\n    $ = require(\"jquery\"),\n    Codemirror = require('codemirror');\n\nvar drawButtons = function (yashe) {\n  yashe.buttons = $(\"<div class='yashe_buttons'></div>\").appendTo($(yashe.getWrapperElement()));\n  /**\n   * upload button\n   */\n\n  var uploadButton = $(\"<div>\", {\n    class: \"downloadBtns\"\n  }).append($('<input type=\"file\" accept=\".shex\" name=\"file-1[]\" id=\"file-1\" class=\"inputfileBtn\" data-multiple-caption=\"{count}' + 'files selected\" multiple /><label id=\"uploadBntLabel\" for=\"file-1\">' + imgs.upload + '</label>').addClass(\"yashe_uploadBtn\").attr(\"title\", \"Upload your ShEx file\").on('change', () => {\n    utils.readFile(yashe);\n  }));\n  /**\n   * download button\n   */\n\n  var downloadButton = $(\"<div>\", {\n    class: \"downloadBtns\"\n  }).append($(yutils.svg.getElement(imgs.download)).addClass(\"yashe_downloadBtn\").attr(\"title\", \"Download File\").attr(\"id\", \"downloadBtn\").click(function () {\n    var textFileAsBlob = new Blob([yashe.getValue()], {\n      type: 'text/shex'\n    });\n    var fileNameToSaveAs = \"document.shex\";\n    var downloadLink = document.createElement(\"a\");\n    downloadLink.download = fileNameToSaveAs;\n    downloadLink.innerHTML = \"Download File\";\n\n    if (window.URL != null) {\n      // Chrome allows the link to be clicked without actually adding it to the DOM.\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n    } else {\n      // Firefox requires the link to be added to the DOM before it can be clicked.\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n      downloadLink.onclick = destroyClickedElement;\n      downloadLink.style.display = \"none\";\n      document.body.appendChild(downloadLink);\n    }\n\n    downloadLink.click();\n    Codemirror.signal(yashe, 'download');\n  }));\n  /**\n   * copy button\n   */\n\n  var copyButton = $(\"<div>\", {\n    class: \"downloadBtns\"\n  }).append($(yutils.svg.getElement(imgs.copy)).addClass(\"yashe_downloadBtn\").attr(\"id\", \"copyBtn\").attr(\"title\", \"Copy to the clipboard\").click(function () {\n    Codemirror.signal(yashe, 'copy');\n  }));\n  /**\n   * delete button\n   */\n\n  var deleteButton = $(\"<div>\", {\n    class: \"downloadBtns\"\n  }).append($(yutils.svg.getElement(imgs.delete)).addClass(\"yashe_deletedBtn\").attr('id', 'deleteBtn').attr(\"title\", \"Delete content\").click(function () {\n    yashe.setValue(\"\");\n    Codemirror.signal(yashe, 'delete');\n  }));\n  /**\n   * theme button\n   */\n\n  var themeButton = $(\"<div>\", {\n    class: \"downloadBtns\"\n  }).append($(yutils.svg.getElement(imgs.theme)).addClass(\"yashe_themeBtn\").attr('id', 'themeBtn').attr(\"title\", 'Change the theme').click(function () {\n    var themeValue = 'wiki';\n    var color = 'black';\n\n    if (yashe.getOption('theme') == 'wiki') {\n      themeValue = 'dark';\n      color = 'white';\n    }\n\n    yashe.setOption(\"theme\", themeValue); //Change fill of buttons\n\n    $('#uploadBntLabel').css('fill', color);\n    $('#downloadBtn').css('fill', color);\n    $('#copyBtn').css('fill', color);\n    $('#deleteBtn').css('fill', color);\n    $('#themeBtn').css('fill', color);\n    $('#fullBtn').css('fill', color);\n    $('#smallBtn').css('fill', color);\n    Codemirror.signal(yashe, 'themeChange');\n  }));\n  /**\n     * fullscreen button   \n  */\n\n  var toggleFullscreen = $(\"<div>\", {\n    class: \"fullscreenToggleBtns\"\n  }).append($(yutils.svg.getElement(imgs.fullscreen)).addClass(\"yashe_fullscreenBtn\").attr(\"title\", \"Set editor full screen\").attr(\"id\", \"fullBtn\").click(function () {\n    yashe.setOption(\"fullScreen\", true);\n    Codemirror.signal(yashe, 'expandScreen');\n  })).append($(yutils.svg.getElement(imgs.smallscreen)).addClass(\"yashe_smallscreenBtn\").attr(\"title\", \"Set editor to normal size\").attr(\"id\", \"smallBtn\").click(function () {\n    yashe.setOption(\"fullScreen\", false);\n    Codemirror.signal(yashe, 'collapseScreen');\n  })); //Draw buttons\n\n  if (yashe.options.showUploadButton) {\n    yashe.buttons.append(uploadButton);\n  }\n\n  if (yashe.options.showDownloadButton) {\n    yashe.buttons.append(downloadButton);\n  }\n\n  if (yashe.options.showCopyButton) {\n    yashe.buttons.append(copyButton);\n  }\n\n  if (yashe.options.showDeleteButton) {\n    yashe.buttons.append(deleteButton);\n  }\n\n  if (yashe.options.showThemeButton) {\n    yashe.buttons.append(themeButton);\n  }\n\n  if (yashe.options.showFullScreenButton) {\n    yashe.buttons.append(toggleFullscreen);\n  }\n};\n\nmodule.exports = {\n  drawButtons: drawButtons\n};","map":null,"metadata":{},"sourceType":"script"}