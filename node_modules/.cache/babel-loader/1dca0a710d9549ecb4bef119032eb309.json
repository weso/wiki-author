{"ast":null,"code":"var ENTITY_TYPES = {\n  'http://www.wikidata.org/prop/direct/': 'property',\n  'http://www.wikidata.org/prop/direct-normalized/': 'property',\n  'http://www.wikidata.org/prop/': 'property',\n  'http://www.wikidata.org/prop/novalue/': 'property',\n  'http://www.wikidata.org/prop/statement/': 'property',\n  'http://www.wikidata.org/prop/statement/value/': 'property',\n  'http://www.wikidata.org/prop/statement/value-normalized/': 'property',\n  'http://www.wikidata.org/prop/qualifier/': 'property',\n  'http://www.wikidata.org/prop/qualifier/value/': 'property',\n  'http://www.wikidata.org/prop/qualifier/value-normalized/': 'property',\n  'http://www.wikidata.org/prop/reference/': 'property',\n  'http://www.wikidata.org/prop/reference/value/': 'property',\n  'http://www.wikidata.org/prop/reference/value-normalized/': 'property',\n  'http://www.wikidata.org/wiki/Special:EntityData/': 'item',\n  'http://www.wikidata.org/entity/': 'item'\n};\nvar NAMESPACE_SHORTCUTS = {\n  wikibase: 'http://wikiba.se/ontology#',\n  wd: 'http://www.wikidata.org/entity/',\n  wdt: 'http://www.wikidata.org/prop/direct/',\n  wdtn: 'http://www.wikidata.org/prop/direct-normalized/',\n  wds: 'http://www.wikidata.org/entity/statement/',\n  p: 'http://www.wikidata.org/prop/',\n  wdref: 'http://www.wikidata.org/reference/',\n  wdv: 'http://www.wikidata.org/value/',\n  ps: 'http://www.wikidata.org/prop/statement/',\n  psv: 'http://www.wikidata.org/prop/statement/value/',\n  psn: 'http://www.wikidata.org/prop/statement/value-normalized/',\n  pq: 'http://www.wikidata.org/prop/qualifier/',\n  pqv: 'http://www.wikidata.org/prop/qualifier/value/',\n  pqn: 'http://www.wikidata.org/prop/qualifier/value-normalized/',\n  pr: 'http://www.wikidata.org/prop/reference/',\n  prv: 'http://www.wikidata.org/prop/reference/value/',\n  prn: 'http://www.wikidata.org/prop/reference/value-normalized/',\n  wdno: 'http://www.wikidata.org/prop/novalue/',\n  wdata: 'http://www.wikidata.org/wiki/Special:EntityData/'\n};\n1;\n\nvar isWikidataValidPrefix = function (yashe, prefixName) {\n  var definedPrefixex = yashe.getDefinedPrefixes();\n  var iriPrefix; //Gets de IRI of the prefix from the defined\n\n  for (const prop in definedPrefixex) {\n    if (prop === prefixName) iriPrefix = definedPrefixex[prop];\n  } //Compare iriPrefix with the valid wikidata prefixes\n\n\n  for (const pref in ENTITY_TYPES) {\n    if (pref === iriPrefix) return true;\n  }\n\n  return false;\n};\n\nvar isWikidataEntitiesPrefix = function (yashe, prefixName) {\n  var definedPrefixex = yashe.getDefinedPrefixes();\n  var iriPrefix; //Gets de IRI of the prefix from the defined\n\n  for (const prop in definedPrefixex) {\n    if (prop === prefixName) iriPrefix = definedPrefixex[prop];\n  } //Compare iriPrefix with the valid wikidata entities prefixes\n\n\n  for (const pref in ENTITY_TYPES) {\n    if (ENTITY_TYPES[pref] === 'item' && pref == iriPrefix) return true;\n  }\n\n  return false;\n};\n\nvar isWikidataPropertiesPrefix = function (yashe, prefixName) {\n  var definedPrefixex = yashe.getDefinedPrefixes();\n  var iriPrefix; //Gets de IRI of the prefix from the defined\n\n  for (const prop in definedPrefixex) {\n    if (prop === prefixName) iriPrefix = definedPrefixex[prop];\n  } //Compare iriPrefix with the valid wikidata properties prefixes\n\n\n  for (const pref in ENTITY_TYPES) {\n    if (ENTITY_TYPES[pref] === 'property' && pref == iriPrefix) return true;\n  }\n\n  return false;\n};\n\nmodule.exports = {\n  entityTypes: ENTITY_TYPES,\n  namespaceShortCuts: NAMESPACE_SHORTCUTS,\n  isWikidataValidPrefix: isWikidataValidPrefix,\n  isWikidataEntitiesPrefix: isWikidataEntitiesPrefix,\n  isWikidataPropertiesPrefix: isWikidataPropertiesPrefix\n};","map":null,"metadata":{},"sourceType":"script"}