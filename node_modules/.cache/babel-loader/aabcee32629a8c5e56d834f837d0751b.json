{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/Assistant.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { AppContext } from '../../App';\nimport { Collapse } from 'reactstrap';\nimport AssistNav from './assistant/AssistNav';\nimport AssistContent from './assistant/AssistContent';\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport Properties from '../../conf/properties';\nimport '../../css/Assistant.css';\nimport '../../css/resizable/react-resizable.css';\nexport const AssistContext = React.createContext();\n\nfunction Assistant(props) {\n  const context = useContext(AppContext);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAssistOpen = _useState2[0],\n        setAssistOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isPrefixesOpen = _useState4[0],\n        setPrefixesOpen = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isColorsOpen = _useState6[0],\n        setColorsOpen = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isConfigOpen = _useState8[0],\n        setConfigOpen = _useState8[1];\n\n  const _useState9 = useState('#fffff'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        color = _useState10[0],\n        setColor = _useState10[1];\n\n  const handleChange = function (color, element, NAMESPACE) {\n    setColor(color); //NECESSARY TO  FORCE RENDER\n\n    NAMESPACE[element] = color;\n  };\n\n  return React.createElement(AssistContext.Provider, {\n    value: {\n      isAssistOpen: isAssistOpen,\n      isPrefixesOpen: isPrefixesOpen,\n      isColorsOpen: isColorsOpen,\n      isConfigOpen: isConfigOpen,\n      setAssistOpen: setAssistOpen,\n      setPrefixesOpen: setPrefixesOpen,\n      setColorsOpen: setColorsOpen,\n      setConfigOpen: setConfigOpen,\n      handleChange: handleChange\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Collapse, {\n    isOpen: context.isAssistantOpen,\n    className: \"assistCollapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ResizableBox, {\n    width: context.width,\n    height: 100 //Just to avoid console errors, but ignore it\n    ,\n    onResize: (e, data) => context.handleResize(e, data),\n    resizeHandles: ['e'],\n    minConstraints: [470, 100],\n    maxConstraints: [1000, 1000],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerAssist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(AssistNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(AssistContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n}\n\nexport default Assistant;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/Assistant.js"],"names":["React","useContext","useState","useEffect","AppContext","Collapse","AssistNav","AssistContent","Resizable","ResizableBox","Properties","AssistContext","createContext","Assistant","props","context","isAssistOpen","setAssistOpen","isPrefixesOpen","setPrefixesOpen","isColorsOpen","setColorsOpen","isConfigOpen","setConfigOpen","color","setColor","handleChange","element","NAMESPACE","isAssistantOpen","width","e","data","handleResize"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAO,yBAAP;AACA,OAAO,yCAAP;AAEA,OAAO,MAAMC,aAAa,GAAGX,KAAK,CAACY,aAAN,EAAtB;;AAEP,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAEnB,QAAMC,OAAO,GAAGd,UAAU,CAACG,UAAD,CAA1B;;AAFmB,oBAGmBF,QAAQ,CAAC,IAAD,CAH3B;AAAA;AAAA,QAGZc,YAHY;AAAA,QAGEC,aAHF;;AAAA,qBAIuBf,QAAQ,CAAC,KAAD,CAJ/B;AAAA;AAAA,QAIZgB,cAJY;AAAA,QAIIC,eAJJ;;AAAA,qBAKmBjB,QAAQ,CAAC,KAAD,CAL3B;AAAA;AAAA,QAKZkB,YALY;AAAA,QAKEC,aALF;;AAAA,qBAMmBnB,QAAQ,CAAC,KAAD,CAN3B;AAAA;AAAA,QAMZoB,YANY;AAAA,QAMEC,aANF;;AAAA,qBAOMrB,QAAQ,CAAC,QAAD,CAPd;AAAA;AAAA,QAOZsB,KAPY;AAAA,QAONC,QAPM;;AASnB,QAAMC,YAAY,GAAG,UAASF,KAAT,EAAeG,OAAf,EAAuBC,SAAvB,EAAiC;AAClDH,IAAAA,QAAQ,CAACD,KAAD,CAAR,CADkD,CAClC;;AAChBI,IAAAA,SAAS,CAACD,OAAD,CAAT,GAAqBH,KAArB;AACH,GAHD;;AAKA,SACQ,oBAAC,aAAD,CAAe,QAAf;AACA,IAAA,KAAK,EACG;AACAR,MAAAA,YAAY,EAACA,YADb;AAEAE,MAAAA,cAAc,EAACA,cAFf;AAGAE,MAAAA,YAAY,EAACA,YAHb;AAIAE,MAAAA,YAAY,EAACA,YAJb;AAKAL,MAAAA,aAAa,EAACA,aALd;AAMAE,MAAAA,eAAe,EAACA,eANhB;AAOAE,MAAAA,aAAa,EAACA,aAPd;AAQAE,MAAAA,aAAa,EAACA,aARd;AASAG,MAAAA,YAAY,EAACA;AATb,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcQ,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEX,OAAO,CAACc,eAA1B;AAA2C,IAAA,SAAS,EAAC,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,YAAD;AAAgB,IAAA,KAAK,EAAEd,OAAO,CAACe,KAA/B;AACgB,IAAA,MAAM,EAAE,GADxB,CAC6B;AAD7B;AAEgB,IAAA,QAAQ,EAAE,CAACC,CAAD,EAAGC,IAAH,KAAUjB,OAAO,CAACkB,YAAR,CAAqBF,CAArB,EAAuBC,IAAvB,CAFpC;AAGgB,IAAA,aAAa,EAAE,CAAC,GAAD,CAH/B;AAIgB,IAAA,cAAc,EAAE,CAAC,GAAD,EAAM,GAAN,CAJhC;AAI4C,IAAA,cAAc,EAAE,CAAC,IAAD,EAAO,IAAP,CAJ5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMQ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAEQ,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CANR,CADA,CAdR,CADR;AA8BP;;AAGD,eAAenB,SAAf","sourcesContent":["import React,{useContext,useState,useEffect} from 'react';\nimport {AppContext} from '../../App';\nimport { Collapse } from 'reactstrap';\nimport AssistNav from './assistant/AssistNav';\nimport AssistContent from './assistant/AssistContent';\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport Properties from '../../conf/properties';\nimport '../../css/Assistant.css';\nimport '../../css/resizable/react-resizable.css';\n\nexport const AssistContext = React.createContext();\n\nfunction Assistant (props) {\n\n        const context = useContext(AppContext);\n        const [isAssistOpen, setAssistOpen] = useState(true);\n        const [isPrefixesOpen, setPrefixesOpen] = useState(false);\n        const [isColorsOpen, setColorsOpen] = useState(false);\n        const [isConfigOpen, setConfigOpen] = useState(false);\n        const [color,setColor] = useState('#fffff')\n\n        const handleChange = function(color,element,NAMESPACE){\n            setColor(color);//NECESSARY TO  FORCE RENDER\n            NAMESPACE[element] = color;\n        }\n\n        return (\n                <AssistContext.Provider\n                value={\n                        {\n                        isAssistOpen:isAssistOpen,\n                        isPrefixesOpen:isPrefixesOpen,\n                        isColorsOpen:isColorsOpen,                  \n                        isConfigOpen:isConfigOpen,\n                        setAssistOpen:setAssistOpen,\n                        setPrefixesOpen:setPrefixesOpen,\n                        setColorsOpen:setColorsOpen,\n                        setConfigOpen:setConfigOpen,\n                        handleChange:handleChange\n                        }\n                }>\n                        <Collapse isOpen={context.isAssistantOpen} className='assistCollapse'>\n                        <ResizableBox   width={context.width} \n                                        height={100} //Just to avoid console errors, but ignore it\n                                        onResize={(e,data)=>context.handleResize(e,data)}\n                                        resizeHandles={['e']}  \n                                        minConstraints={[470, 100]} maxConstraints={[1000, 1000]}>\n                                \n                                <div className='containerAssist'>                                    \n                                        <AssistNav/>\n                                        <AssistContent/>              \n                                </div>\n                                \n                        </ResizableBox>\n                        </Collapse>      \n                </AssistContext.Provider>);\n}\n\n\nexport default Assistant;"]},"metadata":{},"sourceType":"module"}