{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Highlighter from './Highlighter.react';\nimport Menu from './Menu.react';\nimport MenuItem from './MenuItem.react';\nimport { getOptionLabel, getOptionProperty } from '../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props, idx) {\n    return (\n      /*#__PURE__*/\n      React.createElement(Highlighter, {\n        search: props.text\n      }, getOptionLabel(option, props.labelKey))\n    );\n  }\n};\n\nvar TypeaheadMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TypeaheadMenu, _React$Component);\n\n  function TypeaheadMenu() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderMenuItem\", function (option, position) {\n      var _this$props = _this.props,\n          labelKey = _this$props.labelKey,\n          newSelectionPrefix = _this$props.newSelectionPrefix,\n          paginationText = _this$props.paginationText,\n          renderMenuItemChildren = _this$props.renderMenuItemChildren,\n          text = _this$props.text;\n      var label = getOptionLabel(option, labelKey);\n      var menuItemProps = {\n        disabled: getOptionProperty(option, 'disabled'),\n        label: label,\n        option: option,\n        position: position\n      };\n\n      if (option.customOption) {\n        return (\n          /*#__PURE__*/\n          React.createElement(MenuItem, _extends({}, menuItemProps, {\n            className: \"rbt-menu-custom-option\",\n            key: position,\n            label: newSelectionPrefix + label\n          }), newSelectionPrefix,\n          /*#__PURE__*/\n          React.createElement(Highlighter, {\n            search: text\n          }, label))\n        );\n      }\n\n      if (option.paginationOption) {\n        return (\n          /*#__PURE__*/\n          React.createElement(React.Fragment, {\n            key: \"pagination-item\"\n          },\n          /*#__PURE__*/\n          React.createElement(Menu.Divider, null),\n          /*#__PURE__*/\n          React.createElement(MenuItem, _extends({}, menuItemProps, {\n            className: \"rbt-menu-pagination-option\",\n            label: paginationText\n          }), paginationText))\n        );\n      }\n\n      return (\n        /*#__PURE__*/\n        React.createElement(MenuItem, _extends({}, menuItemProps, {\n          key: position\n        }), renderMenuItemChildren(option, _this.props, position))\n      );\n    });\n\n    return _this;\n  }\n\n  var _proto = TypeaheadMenu.prototype;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        id = _this$props2.id,\n        labelKey = _this$props2.labelKey,\n        newSelectionPrefix = _this$props2.newSelectionPrefix,\n        options = _this$props2.options,\n        renderMenuItemChildren = _this$props2.renderMenuItemChildren,\n        text = _this$props2.text,\n        menuProps = _objectWithoutPropertiesLoose(_this$props2, [\"id\", \"labelKey\", \"newSelectionPrefix\", \"options\", \"renderMenuItemChildren\", \"text\"]);\n\n    return (\n      /*#__PURE__*/\n      // Explictly pass some props so Flow doesn't complain...\n      React.createElement(Menu, _extends({}, menuProps, {\n        id: id,\n        text: text\n      }), options.map(this._renderMenuItem))\n    );\n  };\n\n  return TypeaheadMenu;\n}(React.Component);\n\n_defineProperty(TypeaheadMenu, \"propTypes\", propTypes);\n\n_defineProperty(TypeaheadMenu, \"defaultProps\", defaultProps);\n\nexport default TypeaheadMenu;","map":null,"metadata":{},"sourceType":"module"}