{"ast":null,"code":"import Codemirror from 'codemirror';\nimport Editor from '../entities/editor';\nimport Shape from '../entities/shexEntities/shape';\nimport Facet from '../entities/shexEntities/shexUtils/facet';\nimport { addPrefix } from './prefixUtils';\nimport ValueSetValue from '../entities/shexEntities/shexUtils/valueSetValue';\nlet shapesCount = 0;\nlet facetsCount = 0;\nlet valuesCount = 0;\n\nfunction addShape(shapes, width) {\n  const id = shapes.length + shapesCount++;\n  const newShape = new Shape(id);\n  let newShapes = [];\n  newShapes = Object.assign(newShapes, shapes);\n  newShapes.push(newShape);\n  checkPrefixes();\n  emit(newShapes, width);\n  return newShape;\n}\n\nfunction deleteShape(shapes, shapeId, confirm, width) {\n  if (!confirm) {\n    confirm = window.confirm('Are you sure?');\n  }\n\n  if (confirm == true) {\n    const newShapes = shapes.filter(shape => shape.id != shapeId);\n    emit(newShapes, width);\n    return newShapes;\n  }\n\n  return shapes;\n}\n\nfunction getShapeById(shapes, shapeId) {\n  return shapes.filter(function (obj) {\n    return obj.id == shapeId;\n  })[0];\n}\n\nfunction getShapeByName(shapes, name) {\n  for (let s in shapes) {\n    if (shapes[s].getType().toString() == name) {\n      return shapes[s];\n    }\n  }\n}\n\nfunction getTripleById(shape, tripleId) {\n  return shape.getTriples().filter(function (obj) {\n    return obj.id == tripleId;\n  })[0];\n}\n\nfunction emit(newShapes, width) {\n  const yashe = Editor.getInstance().getYashe();\n\n  if (yashe != undefined) {\n    Codemirror.signal(yashe, 'humanEvent', newShapes, width);\n    checkPrefixes();\n  }\n}\n\nfunction checkPrefixes() {\n  const yashe = Editor.getInstance().getYashe();\n  let isExampleDef = false;\n  let isSchemaDef = false;\n  let isXsdDef = false;\n  Object.keys(yashe.getDefinedPrefixes()).map(p => {\n    if (p == '') {\n      isExampleDef = true;\n    }\n\n    if (p == 'schema') {\n      isSchemaDef = true;\n    }\n\n    if (p == 'xsd') {\n      isXsdDef = true;\n    }\n  });\n\n  if (!isExampleDef) {\n    addPrefix('');\n  }\n\n  if (!isSchemaDef) {\n    addPrefix('schema');\n  }\n\n  if (!isXsdDef) {\n    addPrefix('xsd');\n  }\n}\n\nfunction addValueSetValue(values) {\n  const id = values.length + valuesCount++;\n  return new ValueSetValue(id);\n}\n\nfunction addFacet(facets) {\n  const id = facets.length + facetsCount++;\n  return new Facet(id);\n}\n\nconst shexUtils = {\n  addShape: addShape,\n  deleteShape: deleteShape,\n  getShapeById: getShapeById,\n  getShapeByName: getShapeByName,\n  getTripleById: getTripleById,\n  emit: emit,\n  addFacet: addFacet,\n  addValueSetValue: addValueSetValue\n};\nexport default shexUtils;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/utils/shexUtils.js"],"names":["Codemirror","Editor","Shape","Facet","addPrefix","ValueSetValue","shapesCount","facetsCount","valuesCount","addShape","shapes","width","id","length","newShape","newShapes","Object","assign","push","checkPrefixes","emit","deleteShape","shapeId","confirm","window","filter","shape","getShapeById","obj","getShapeByName","name","s","getType","toString","getTripleById","tripleId","getTriples","yashe","getInstance","getYashe","undefined","signal","isExampleDef","isSchemaDef","isXsdDef","keys","getDefinedPrefixes","map","p","addValueSetValue","values","addFacet","facets","shexUtils"],"mappings":"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","sourcesContent":["import Codemirror from 'codemirror';\nimport Editor from '../entities/editor';\nimport Shape from '../entities/shexEntities/shape';\nimport Facet from '../entities/shexEntities/shexUtils/facet';\nimport {addPrefix} from './prefixUtils';\nimport ValueSetValue from '../entities/shexEntities/shexUtils/valueSetValue';\n\nlet shapesCount = 0;\nlet facetsCount = 0;\nlet valuesCount = 0;\n\nfunction addShape(shapes,width){\n\n    const id = shapes.length + shapesCount++;\n    const newShape = new Shape(id);\n    \n    let newShapes = [];\n    newShapes = Object.assign(newShapes, shapes);\n    newShapes.push(newShape);\n    checkPrefixes();\n    emit(newShapes,width);\n    return newShape;    \n}\n\nfunction deleteShape(shapes,shapeId,confirm,width) {\n    if(!confirm){\n        confirm = window.confirm('Are you sure?');\n    }\n    if (confirm == true) {\n        const newShapes = shapes.filter(shape => shape.id != shapeId);\n        emit(newShapes,width);\n        return newShapes;\n    }\n    return shapes;\n}\n\n\nfunction getShapeById(shapes,shapeId) {\n    return shapes.filter(function( obj ) {\n        return obj.id == shapeId\n    })[0];\n}\n\nfunction getShapeByName(shapes,name) {\n    for(let s in shapes){\n        if(shapes[s].getType().toString() == name){\n            return shapes[s];\n        }\n    }\n}\n\n\nfunction getTripleById(shape,tripleId) {\n    return shape.getTriples().filter(function( obj ) {\n        return obj.id == tripleId\n    })[0];\n}\n\n\nfunction emit(newShapes,width) {\n    const yashe = Editor.getInstance().getYashe();\n    if(yashe!=undefined){\n        Codemirror.signal(yashe,'humanEvent',newShapes,width);\n        checkPrefixes();\n    }\n}\n\nfunction checkPrefixes(){\n    const yashe = Editor.getInstance().getYashe();\n    let isExampleDef = false;\n    let isSchemaDef = false;\n    let isXsdDef = false;\n    Object.keys(yashe.getDefinedPrefixes()).map(p=>{\n        if(p==''){\n            isExampleDef=true;\n        }\n        if(p=='schema'){\n            isSchemaDef = true;\n        } \n        if(p=='xsd'){\n            isXsdDef = true;\n        }\n    })\n\n    if(!isExampleDef){\n        addPrefix('');\n    } \n    if(!isSchemaDef){\n        addPrefix('schema');\n    } \n    if(!isXsdDef){\n        addPrefix('xsd');\n    }\n}\n\n\nfunction addValueSetValue(values){\n    const id = values.length + valuesCount++;\n    return new ValueSetValue(id);    \n}\n\n\nfunction addFacet(facets){\n    const id = facets.length + facetsCount++;\n    return new Facet(id);    \n}\n\n\n\nconst shexUtils = {\n    addShape:addShape,\n    deleteShape:deleteShape,\n    getShapeById:getShapeById,\n    getShapeByName:getShapeByName,\n    getTripleById:getTripleById,\n    emit:emit,\n    addFacet:addFacet,\n    addValueSetValue:addValueSetValue\n}\n\nexport default shexUtils;"]},"metadata":{},"sourceType":"module"}