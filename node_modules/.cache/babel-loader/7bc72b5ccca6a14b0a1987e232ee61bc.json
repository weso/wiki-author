{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { getDisplayName, isSizeLarge, isSizeSmall } from '../utils';\n\nfunction withClassNames(Component) {\n  // Use a class instead of function component to support refs.\n\n  /* eslint-disable-next-line react/prefer-stateless-function */\n  var WrappedComponent =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(WrappedComponent, _React$Component);\n\n    function WrappedComponent() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = WrappedComponent.prototype;\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          isInvalid = _this$props.isInvalid,\n          isValid = _this$props.isValid,\n          size = _this$props.size,\n          props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"isInvalid\", \"isValid\", \"size\"]);\n\n      return (\n        /*#__PURE__*/\n        React.createElement(Component, _extends({}, props, {\n          className: cx('form-control', 'rbt-input', {\n            'input-lg form-control-lg': isSizeLarge(size),\n            'input-sm form-control-sm': isSizeSmall(size),\n            'is-invalid': isInvalid,\n            'is-valid': isValid\n          }, className)\n        }))\n      );\n    };\n\n    return WrappedComponent;\n  }(React.Component);\n\n  _defineProperty(WrappedComponent, \"displayName\", \"withClassNames(\" + getDisplayName(Component) + \")\");\n\n  return WrappedComponent;\n}\n\nexport default withClassNames;","map":null,"metadata":{},"sourceType":"module"}