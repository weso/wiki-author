{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/constraint/valueSetValues/InputValue.js\";\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../../../../../../../../App';\nimport { Collapse } from 'reactstrap';\n\nfunction InputValue(props) {\n  const type = props.type,\n        isOpen = props.isOpen;\n  const context = useContext(AppContext);\n\n  const _useState = useState(type.value),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const handleNameChange = function (e) {\n    let newName = e.target.value;\n    type.setValue(newName);\n    context.emit();\n    setName(newName);\n  };\n\n  return React.createElement(Collapse, {\n    isOpen: isOpen,\n    className: \"imputSetCollapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"name\",\n    value: name,\n    onChange: handleNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nexport default InputValue;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/customize/constraint/valueSetValues/InputValue.js"],"names":["React","useState","useContext","AppContext","Collapse","InputValue","props","type","isOpen","context","value","name","setName","handleNameChange","e","newName","target","setValue","emit"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA,QAEjBC,IAFiB,GAEFD,KAFE,CAEjBC,IAFiB;AAAA,QAEZC,MAFY,GAEFF,KAFE,CAEZE,MAFY;AAGxB,QAAMC,OAAO,GAAGP,UAAU,CAACC,UAAD,CAA1B;;AAHwB,oBAIHF,QAAQ,CAACM,IAAI,CAACG,KAAN,CAJL;AAAA;AAAA,QAIjBC,IAJiB;AAAA,QAIZC,OAJY;;AAMxB,QAAMC,gBAAgB,GAAG,UAASC,CAAT,EAAW;AAChC,QAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASN,KAAvB;AACAH,IAAAA,IAAI,CAACU,QAAL,CAAcF,OAAd;AACAN,IAAAA,OAAO,CAACS,IAAR;AACAN,IAAAA,OAAO,CAACG,OAAD,CAAP;AACH,GALD;;AAOA,SAAQ,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEP,MAAlB;AAA0B,IAAA,SAAS,EAAC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAQ,IAAA,IAAI,EAAC,MAAb;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAEG,IAFX;AAGI,IAAA,QAAQ,EAAEE,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CAAR;AAOH;;AAID,eAAeR,UAAf","sourcesContent":["import React,{useState,useContext} from 'react';\nimport {AppContext} from '../../../../../../../../App';\nimport { Collapse } from 'reactstrap';\n\nfunction InputValue (props) {\n    \n    const {type,isOpen} = props;\n    const context = useContext(AppContext);\n    const [name,setName]=useState(type.value);\n\n    const handleNameChange = function(e){\n        let newName = e.target.value;\n        type.setValue(newName);\n        context.emit();\n        setName(newName);\n    }\n\n    return (<Collapse isOpen={isOpen} className='imputSetCollapse'>\n                    <input  type=\"text\" \n                        className=\"name\"\n                        value={name}\n                        onChange={handleNameChange}/>\n\n                </Collapse>);                          \n}\n\n\n\nexport default InputValue;\n"]},"metadata":{},"sourceType":"module"}