{"ast":null,"code":"import YASHE from 'yashe'; //Singleton Pattern\n\nconst Editor = (() => {\n  function EditorClass() {\n    this.getYashe = function () {\n      return this.yashe;\n    };\n\n    this.setYashe = function (yashe) {\n      this.yashe = yashe;\n    };\n\n    this.getPrefixes = function () {\n      let definedPrefixes = this.getYashe().getDefinedPrefixes();\n      let prefixes = '';\n\n      for (let pre in definedPrefixes) {\n        prefixes += 'PREFIX ' + pre + ':    <' + definedPrefixes[pre] + '>\\n';\n      }\n\n      prefixes += '\\n';\n      return prefixes;\n    };\n\n    this.draw = function (shapes, prefixes) {\n      let newContent = prefixes;\n\n      if (!prefixes) {\n        newContent = this.getPrefixes();\n      }\n\n      shapes.forEach(element => {\n        newContent += element.toString();\n      });\n      this.getYashe().setValue(newContent);\n    };\n  }\n\n  let instance;\n  return {\n    getInstance: () => {\n      if (!instance) {\n        instance = new EditorClass();\n      }\n\n      return instance;\n    }\n  };\n})();\n\nexport default Editor;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/entities/editor.js"],"names":["YASHE","Editor","EditorClass","getYashe","yashe","setYashe","getPrefixes","definedPrefixes","getDefinedPrefixes","prefixes","pre","draw","shapes","newContent","forEach","element","toString","setValue","instance","getInstance"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAAC,MAAK;AAEjB,WAASC,WAAT,GAAsB;AAGlB,SAAKC,QAAL,GAAgB,YAAY;AACxB,aAAO,KAAKC,KAAZ;AACH,KAFD;;AAIA,SAAKC,QAAL,GAAiB,UAAUD,KAAV,EAAiB;AAC9B,WAAKA,KAAL,GAAaA,KAAb;AACH,KAFD;;AAKC,SAAKE,WAAL,GAAmB,YAAY;AACxB,UAAIC,eAAe,GAAG,KAAKJ,QAAL,GAAgBK,kBAAhB,EAAtB;AACA,UAAIC,QAAQ,GAAC,EAAb;;AACA,WAAI,IAAIC,GAAR,IAAeH,eAAf,EAA+B;AAC3BE,QAAAA,QAAQ,IAAE,YAAUC,GAAV,GAAc,QAAd,GAAuBH,eAAe,CAACG,GAAD,CAAtC,GAA4C,KAAtD;AACH;;AACDD,MAAAA,QAAQ,IAAE,IAAV;AACA,aAAOA,QAAP;AACP,KARA;;AAUD,SAAKE,IAAL,GAAY,UAASC,MAAT,EAAgBH,QAAhB,EAAyB;AACjC,UAAII,UAAU,GAACJ,QAAf;;AACA,UAAG,CAACA,QAAJ,EAAa;AACTI,QAAAA,UAAU,GAAG,KAAKP,WAAL,EAAb;AACH;;AAEDM,MAAAA,MAAM,CAACE,OAAP,CAAeC,OAAO,IAAG;AACrBF,QAAAA,UAAU,IAAIE,OAAO,CAACC,QAAR,EAAd;AACH,OAFD;AAGA,WAAKb,QAAL,GAAgBc,QAAhB,CAAyBJ,UAAzB;AACH,KAVD;AAWH;;AAID,MAAIK,QAAJ;AAEA,SAAM;AACFC,IAAAA,WAAW,EAAE,MAAI;AACb,UAAG,CAACD,QAAJ,EAAa;AACTA,QAAAA,QAAQ,GAAG,IAAIhB,WAAJ,EAAX;AACH;;AACD,aAAOgB,QAAP;AACH;AANC,GAAN;AAUH,CAnDc,GAAf;;AAsDA,eAAejB,MAAf","sourcesContent":["import YASHE from 'yashe';\n\n//Singleton Pattern\nconst Editor = (()=> {\n\n    function EditorClass(){\n\n    \n        this.getYashe = function () {\n            return this.yashe;\n        }\n\n        this.setYashe =  function (yashe) {\n            this.yashe = yashe;\n        }\n\n\n         this.getPrefixes = function () {\n                let definedPrefixes = this.getYashe().getDefinedPrefixes();\n                let prefixes='';\n                for(let pre in definedPrefixes){\n                    prefixes+='PREFIX '+pre+':    <'+definedPrefixes[pre]+'>\\n';\n                }\n                prefixes+='\\n';\n                return prefixes;\n        }\n\n        this.draw = function(shapes,prefixes){\n            let newContent=prefixes;\n            if(!prefixes){\n                newContent = this.getPrefixes();\n            }\n             \n            shapes.forEach(element =>{\n                newContent += element.toString()\n            });\n            this.getYashe().setValue(newContent);\n        }\n    }\n\n   \n\n    let instance;\n\n    return{\n        getInstance: ()=>{\n            if(!instance){\n                instance = new EditorClass();\n            }\n            return instance;\n        }\n\n    }\n\n})();\n\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}