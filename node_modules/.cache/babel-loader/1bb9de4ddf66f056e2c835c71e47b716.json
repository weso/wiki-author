{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/color/utils/ColorPicker.js\";\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../../../../../../App';\nimport { AssistContext } from '../../../../Assistant';\nimport '../../../../../../css/shexComponents/customize/Custom.css';\nimport '../../../../../../css/color/colors.css';\nimport { ChromePicker, SketchPicker } from 'react-color';\nimport reactCSS from 'reactcss';\nimport { useCookies } from 'react-cookie';\nimport { SHAPE_COLORS } from '../../../../../../conf/colors';\nimport { DEFAULTS } from '../../../../../../conf/config';\n\nfunction ColorPicker(props) {\n  const context = useContext(AppContext);\n  const asssistContext = useContext(AssistContext);\n  const namespace = props.namespace,\n        element = props.element,\n        cookie = props.cookie;\n\n  const _useState = useState(namespace[element]),\n        _useState2 = _slicedToArray(_useState, 2),\n        color = _useState2[0],\n        setColor = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isDisplay = _useState4[0],\n        setDisplay = _useState4[1];\n\n  const _useCookies = useCookies('cookies'),\n        _useCookies2 = _slicedToArray(_useCookies, 2),\n        cookies = _useCookies2[0],\n        setCookie = _useCookies2[1];\n\n  const handleClick = () => {\n    setDisplay(!isDisplay);\n  };\n\n  const handleClose = () => {//setDisplay(false);\n    // setCookie('shapeColors', SHAPE_COLORS, { path: '/' });\n  };\n\n  const handle = e => {\n    setColor(e.hex);\n    asssistContext.handleChange(e.hex, element, namespace);\n\n    if (DEFAULTS.saveColors) {\n      setCookie(cookie, namespace, {\n        path: '/'\n      });\n    }\n  };\n\n  const styles = reactCSS({\n    'default': {\n      color: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: color\n      },\n      swatch: {\n        padding: '3px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      popover: {\n        position: 'absolute',\n        transform: 'translateX(-80%)',\n        zIndex: '5000'\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.swatch,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), isDisplay ? React.createElement(\"div\", {\n    style: styles.popover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.cover,\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(ChromePicker, {\n    color: color,\n    onChange: handle,\n    onChangeComplete: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })) : null);\n}\n\nexport default ColorPicker;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/color/utils/ColorPicker.js"],"names":["React","useState","useContext","AppContext","AssistContext","ChromePicker","SketchPicker","reactCSS","useCookies","SHAPE_COLORS","DEFAULTS","ColorPicker","props","context","asssistContext","namespace","element","cookie","color","setColor","isDisplay","setDisplay","cookies","setCookie","handleClick","handleClose","handle","e","hex","handleChange","saveColors","path","styles","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","transform","zIndex","cover","top","right","bottom","left"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react';\nimport {AppContext} from '../../../../../../App';\nimport {AssistContext} from '../../../../Assistant';\nimport '../../../../../../css/shexComponents/customize/Custom.css'\nimport '../../../../../../css/color/colors.css'\nimport { ChromePicker,SketchPicker } from 'react-color';\nimport reactCSS from 'reactcss';\nimport { useCookies } from 'react-cookie';\nimport {SHAPE_COLORS} from '../../../../../../conf/colors';\nimport {DEFAULTS} from '../../../../../../conf/config';\n\nfunction ColorPicker (props) {\n\n    const context = useContext(AppContext);\n    const asssistContext = useContext(AssistContext);\n    const {namespace,element,cookie} = props;\n    const [color,setColor] = useState(namespace[element]);\n    const [isDisplay,setDisplay] = useState(false);\n    const [cookies, setCookie] = useCookies('cookies');\n    \n    const handleClick = () => {\n      setDisplay(!isDisplay);\n    };\n\n    const handleClose = () => {\n      //setDisplay(false);\n     // setCookie('shapeColors', SHAPE_COLORS, { path: '/' });\n    };\n\n    const handle = (e) => {\n      setColor(e.hex);\n      asssistContext.handleChange(e.hex,element,namespace)\n      if(DEFAULTS.saveColors){\n        setCookie(cookie, namespace, { path: '/' });     \n      }\n    };\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: color,\n        },\n        swatch: {\n          padding: '3px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          transform: 'translateX(-80%)',\n          zIndex: '5000',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n\n    return (\n            <div>\n                <div style={ styles.swatch } onClick={ handleClick }>\n                    <div style={ styles.color } />\n                </div>\n                { isDisplay ? \n                    <div style={ styles.popover }>\n                        <div style={ styles.cover } onClick={handleClose}/>\n                        <ChromePicker  color={color} onChange={handle} onChangeComplete={handleClose}/>\n                    </div> \n                    \n                    : null \n                }\n            </div>       \n    );\n                                   \n    \n}\n\n\nexport default ColorPicker;\n\n"]},"metadata":{},"sourceType":"module"}