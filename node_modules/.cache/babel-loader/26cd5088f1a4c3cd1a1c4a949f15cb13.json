{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { CookiesProvider } from 'react-cookie';\nimport Nav from './components/Nav';\nimport MainContainer from './components/MainContainer';\nimport Visualizer from './components/Visualizer';\nimport shexUtils from './utils/shexUtils';\nimport { emitPrefixes } from './utils/prefixUtils';\nimport { makeItResponsive, checkShapeName } from './utils/cssUtils';\nimport yasheUtils from './utils/yasheUtils';\nimport Editor from './entities/editor';\nimport { addPrefixComp, deletePrefixComp } from './utils/prefixUtils';\nimport './css/App.css';\nexport const AppContext = React.createContext();\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        shapes = _useState2[0],\n        setShapes = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        prefixes = _useState4[0],\n        setPrefixes = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        svg = _useState6[0],\n        setSvg = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isAssistantOpen = _useState8[0],\n        setAssistantOpen = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isToolBarOpen = _useState10[0],\n        setToolBarOpen = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isVisualizeOpen = _useState12[0],\n        setVisualizeOpen = _useState12[1];\n\n  const _useState13 = useState(470),\n        _useState14 = _slicedToArray(_useState13, 2),\n        width = _useState14[0],\n        setWidth = _useState14[1]; //700\n\n\n  const assistantToggle = () => setAssistantOpen(!isAssistantOpen);\n\n  const visualizeToggle = () => setVisualizeOpen(!isVisualizeOpen);\n\n  const toolbarToggle = () => setToolBarOpen(!isToolBarOpen);\n\n  const colapseAll = () => {\n    setAssistantOpen(!isToolBarOpen);\n    setVisualizeOpen(!isToolBarOpen);\n    setToolBarOpen(!isToolBarOpen);\n  };\n\n  const addShape = () => {\n    let shape = shexUtils.addShape(shapes, width);\n    setShapes([...shapes, shape]);\n    checkShapeName(shape);\n    visualize();\n  };\n\n  const deleteShape = shapeId => {\n    setShapes(shexUtils.deleteShape(shapes, shapeId, false, width));\n    visualize();\n  };\n\n  const addPrefix = function () {\n    setPrefixes([...prefixes, addPrefixComp(prefixes, width)]);\n  };\n\n  const deletePrefix = function (prefixId) {\n    setPrefixes(deletePrefixComp(prefixes, prefixId, width));\n  };\n\n  const emit = function () {\n    shexUtils.emit(shapes, width);\n    visualize();\n  };\n\n  const emitPref = function () {\n    emitPrefixes(prefixes, width);\n    visualize();\n  };\n\n  const replaceShapes = newShapes => {\n    //This allows to render all the shapes when a property is updated.\n    //Best Glitch Ever\n    //In fact... I would like to render just the property component...\n    setShapes([]);\n    setShapes(newShapes);\n    visualize();\n  };\n\n  const replacePrefixes = newPrefixes => {\n    setPrefixes([]);\n    setPrefixes(newPrefixes);\n  };\n\n  const visualize = function () {\n    let bodyFormData = new FormData();\n    bodyFormData.set('schema', yasheUtils.getSchema());\n    bodyFormData.set('schemaFormat', 'ShExC');\n    bodyFormData.set('schemaEngine', 'SHEX');\n    axios({\n      method: 'post',\n      url: 'http://rdfshape.weso.es:8080/api/schema/visualize',\n      data: bodyFormData,\n      config: {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n    }).then(function (response) {\n      if (response.data.svg != undefined) {\n        if (response.data.svg.startsWith('<?xml')) {\n          setSvg(response.data.svg);\n        } else {\n          setSvg(null);\n        }\n      }\n    }).catch(function (response) {\n      //handle error\n      console.log(response);\n    });\n  };\n\n  const handleResize = function (e, data) {\n    setWidth(data.size.width);\n    makeItResponsive(data.size.width);\n  };\n\n  useEffect(() => {\n    makeItResponsive(width);\n  });\n  return React.createElement(CookiesProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(AppContext.Provider, {\n    value: {\n      shapes: shapes,\n      addShape: addShape,\n      deleteShape: deleteShape,\n      addPrefix: addPrefix,\n      deletePrefix: deletePrefix,\n      replaceShapes: replaceShapes,\n      replacePrefixes: replacePrefixes,\n      prefixes: prefixes,\n      emit: emit,\n      emitPref: emitPref,\n      visualize: visualize,\n      isToolBarOpen: isToolBarOpen,\n      isAssistantOpen: isAssistantOpen,\n      isVisualizeOpen: isVisualizeOpen,\n      assistantToggle: assistantToggle,\n      visualizeToggle: visualizeToggle,\n      handleResize: handleResize,\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    colapseAll: colapseAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(MainContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(Visualizer, {\n    svg: svg,\n    isVisualizeOpen: isVisualizeOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/App.js"],"names":["React","useState","useEffect","axios","CookiesProvider","Nav","MainContainer","Visualizer","shexUtils","emitPrefixes","makeItResponsive","checkShapeName","yasheUtils","Editor","addPrefixComp","deletePrefixComp","AppContext","createContext","App","shapes","setShapes","prefixes","setPrefixes","svg","setSvg","isAssistantOpen","setAssistantOpen","isToolBarOpen","setToolBarOpen","isVisualizeOpen","setVisualizeOpen","width","setWidth","assistantToggle","visualizeToggle","toolbarToggle","colapseAll","addShape","shape","visualize","deleteShape","shapeId","addPrefix","deletePrefix","prefixId","emit","emitPref","replaceShapes","newShapes","replacePrefixes","newPrefixes","bodyFormData","FormData","set","getSchema","method","url","data","config","headers","then","response","undefined","startsWith","catch","console","log","handleResize","e","size"],"mappings":"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","sourcesContent":["\nimport React, {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport { CookiesProvider } from 'react-cookie';\nimport Nav from './components/Nav';\nimport MainContainer from './components/MainContainer';\nimport Visualizer from './components/Visualizer';\nimport shexUtils from './utils/shexUtils';\nimport {emitPrefixes} from './utils/prefixUtils';\nimport {makeItResponsive,checkShapeName} from './utils/cssUtils';\nimport yasheUtils from './utils/yasheUtils';\nimport Editor from './entities/editor';\nimport {addPrefixComp,deletePrefixComp} from './utils/prefixUtils';\nimport './css/App.css';\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n\n    const [shapes,setShapes] = useState([]);\n    const [prefixes,setPrefixes] = useState([]);\n    const [svg,setSvg] = useState('');\n    const [isAssistantOpen, setAssistantOpen] = useState(true);\n    const [isToolBarOpen, setToolBarOpen] = useState(true);\n    const [isVisualizeOpen, setVisualizeOpen] = useState(true);\n    const [width,setWidth] = useState(470);//700\n\n    const assistantToggle = () => setAssistantOpen(!isAssistantOpen);\n    const visualizeToggle = () => setVisualizeOpen(!isVisualizeOpen);\n    const toolbarToggle = () => setToolBarOpen(!isToolBarOpen);\n    const colapseAll = () =>{\n      setAssistantOpen(!isToolBarOpen);\n      setVisualizeOpen(!isToolBarOpen);\n      setToolBarOpen(!isToolBarOpen);\n    }\n\n    const addShape = () =>{\n      let shape = shexUtils.addShape(shapes,width);\n      setShapes([...shapes,shape]);\n      checkShapeName(shape)\n      visualize();\n    }\n\n    const deleteShape = (shapeId) =>{\n      setShapes(shexUtils.deleteShape(shapes,shapeId,false,width));\n      visualize();\n    }\n\n    const addPrefix = function(){\n      setPrefixes([...prefixes,addPrefixComp(prefixes,width)]);\n    }\n      \n    const deletePrefix = function(prefixId){\n      setPrefixes(deletePrefixComp(prefixes,prefixId,width));\n    }\n\n    const emit = function(){\n      shexUtils.emit(shapes,width);\n      visualize();\n    }\n\n    const emitPref = function(){\n      emitPrefixes(prefixes,width);\n      visualize();\n    }\n\n    const replaceShapes = (newShapes) =>{\n      //This allows to render all the shapes when a property is updated.\n      //Best Glitch Ever\n      //In fact... I would like to render just the property component...\n      setShapes([]); \n      \n      setShapes(newShapes);\n      visualize();\n    }\n\n    const replacePrefixes = (newPrefixes) =>{\n      \n      setPrefixes([]); \n      setPrefixes(newPrefixes);\n  \n    }\n    \n\n    const visualize = function(){\n\n        let bodyFormData = new FormData();\n        bodyFormData.set('schema', yasheUtils.getSchema());\n        bodyFormData.set('schemaFormat', 'ShExC');\n        bodyFormData.set('schemaEngine', 'SHEX');\n\n        axios({\n            method: 'post',\n            url: 'http://rdfshape.weso.es:8080/api/schema/visualize',\n            data: bodyFormData,\n            config: { headers: {'Content-Type': 'multipart/form-data' }}\n        })\n        .then(function(response){\n            if(response.data.svg != undefined){\n                if(response.data.svg.startsWith('<?xml')){\n                    setSvg(response.data.svg);\n                }else{\n                    setSvg(null)\n                }\n        }\n        })\n        .catch(function (response) {\n            //handle error\n            console.log(response);\n        });\n\n    }\n\n    const handleResize = function(e, data){\n        setWidth(data.size.width)\n        makeItResponsive(data.size.width); \n    }\n    \n    useEffect(() => {\n      makeItResponsive(width);\n    })\n\n\n    return (\n      <CookiesProvider>\n          <AppContext.Provider\n                value={\n                  {\n                  shapes:shapes,\n                  addShape:addShape,\n                  deleteShape:deleteShape,\n                  addPrefix:addPrefix,\n                  deletePrefix:deletePrefix,\n                  replaceShapes:replaceShapes,\n                  replacePrefixes:replacePrefixes,\n                  prefixes:prefixes,\n                  emit:emit,\n                  emitPref:emitPref,\n                  visualize:visualize,\n                  isToolBarOpen:isToolBarOpen,\n                  isAssistantOpen:isAssistantOpen,\n                  isVisualizeOpen:isVisualizeOpen,\n                  assistantToggle:assistantToggle,\n                  visualizeToggle:visualizeToggle,\n                  handleResize:handleResize,\n                  width:width\n                  }\n                }>\n\n              <Nav colapseAll={colapseAll}/>\n              <MainContainer/>\n              <Visualizer svg={svg} isVisualizeOpen={isVisualizeOpen}/>\n                                                  \n          </AppContext.Provider>\n      </CookiesProvider>);\n\n}  \n           \n\nexport default App;"]},"metadata":{},"sourceType":"module"}