{"ast":null,"code":"var _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/AssistError.js\";\nimport React, { useContext } from 'react';\nimport { AppContext } from '../../../App';\nimport CodeMirror from 'codemirror';\nimport Editor from '../../../entities/editor';\nimport '../../../css/btn/button.css';\n\nfunction AssistError(props) {\n  const context = useContext(AppContext);\n\n  const handle = function () {\n    let yashe = Editor.getInstance().getYashe();\n    CodeMirror.signal(yashe, 'convert');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"infoAssist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"hideError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"shapeErrorCont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"shapeError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"hideConvert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: handle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Convert\"))));\n}\n\nexport default AssistError;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/AssistError.js"],"names":["React","useContext","AppContext","CodeMirror","Editor","AssistError","props","context","handle","yashe","getInstance","getYashe","signal"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,6BAAP;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAEzB,QAAMC,OAAO,GAAGN,UAAU,CAACC,UAAD,CAA1B;;AAEA,QAAMM,MAAM,GAAG,YAAU;AACrB,QAAIC,KAAK,GAAGL,MAAM,CAACM,WAAP,GAAqBC,QAArB,EAAZ;AACAR,IAAAA,UAAU,CAACS,MAAX,CAAkBH,KAAlB,EAAwB,SAAxB;AACH,GAHD;;AAKA,SAAQ;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,OAAO,EAAED,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAPJ,CAAR;AAaH;;AAGD,eAAeH,WAAf","sourcesContent":["import React,{useContext} from 'react';\nimport {AppContext} from '../../../App';\nimport CodeMirror from 'codemirror';\nimport Editor from '../../../entities/editor';\nimport '../../../css/btn/button.css';\n\nfunction AssistError (props) {\n\n    const context = useContext(AppContext);\n\n    const handle = function(){\n        let yashe = Editor.getInstance().getYashe();\n        CodeMirror.signal(yashe,'convert');\n    }\n\n    return (<div className='infoAssist'>\n                <div className='hideError'>\n                    <div className='shapeErrorCont'>\n                        <div className='shapeError'></div>\n                        <p className='errorMsg'></p>\n                    </div>\n                </div>\n                <div className='hideConvert'>\n                    <a className=\"button\">\n                        <span onClick={handle}>Convert</span>\n                    </a>\n                </div>\n            </div>);\n}\n\n\nexport default AssistError;\n"]},"metadata":{},"sourceType":"module"}