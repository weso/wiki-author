{"ast":null,"code":"import getMatchBounds from './getMatchBounds';\nimport getOptionLabel from './getOptionLabel';\n\nfunction getHintText(props) {\n  var activeIndex = props.activeIndex,\n      initialItem = props.initialItem,\n      isFocused = props.isFocused,\n      isMenuShown = props.isMenuShown,\n      labelKey = props.labelKey,\n      multiple = props.multiple,\n      selected = props.selected,\n      text = props.text; // Don't display a hint under the following conditions:\n\n  if ( // No text entered.\n  !text || // The input is not focused.\n  !isFocused || // The menu is hidden.\n  !isMenuShown || // No item in the menu.\n  !initialItem || // The initial item is a custom option.\n  initialItem.customOption || // One of the menu items is active.\n  activeIndex > -1 || // There's already a selection in single-select mode.\n  !!selected.length && !multiple) {\n    return '';\n  }\n\n  var initialItemStr = getOptionLabel(initialItem, labelKey);\n  var bounds = getMatchBounds(initialItemStr.toLowerCase(), text.toLowerCase());\n\n  if (!(bounds && bounds.start === 0)) {\n    return '';\n  } // Text matching is case- and accent-insensitive, so to display the hint\n  // correctly, splice the input string with the hint string.\n\n\n  return text + initialItemStr.slice(bounds.end, initialItemStr.length);\n}\n\nexport default getHintText;","map":null,"metadata":{},"sourceType":"module"}