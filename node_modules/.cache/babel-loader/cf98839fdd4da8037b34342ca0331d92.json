{"ast":null,"code":"\"use strict\";\n\nvar $ = require(\"jquery\");\n\nvar yashe = require('../main.js');\n\nvar Trie = require('../../lib/trie.js');\n\nmodule.exports = function (yashe, name) {\n  return {\n    isValidCompletionPosition: function () {\n      return module.exports.isValidCompletionPosition(yashe);\n    },\n    get: function (token) {\n      var trie = new Trie();\n      var prefixes = module.exports.PREFIXES;\n\n      for (var prefix in prefixes) {\n        trie.insert(prefix + \":\");\n      }\n\n      for (var key in KEYWORDS) {\n        trie.insert(KEYWORDS[key]);\n      }\n\n      var completions = trie.autoComplete(token.toLowerCase());\n      var final = [];\n      var list = {};\n\n      for (var c in completions) {\n        var text = completions[c];\n        var displayText = completions[c];\n\n        if (!module.exports.isInPrefixList(completions[c])) {\n          text = text.toUpperCase();\n        }\n\n        list = {\n          text: text,\n          displayText: displayText\n        };\n        final.push(list);\n      }\n\n      return final;\n    },\n    async: false,\n    bulk: false,\n    autoShow: false\n  };\n};\n\nmodule.exports.isValidCompletionPosition = function (yashe) {\n  module.exports.PREFIXES = yashe.getDefinedPrefixes();\n  return true;\n};\n\nmodule.exports.isInPrefixList = function (completion) {\n  for (var prefix in module.exports.PREFIXES) {\n    if (completion == prefix + \":\") return true;\n  }\n\n  return false;\n};\n\nmodule.exports.PREFIXES = [];\nvar KEYWORDS = ['base', 'prefix', 'import', 'external', 'or', 'and', 'not\"', 'iri', 'bnode', 'literal', 'nonliteral', 'length', 'minlength', 'maxlength', 'mininclusive', 'minexclusive', 'maxinclusive', 'maxexclusive', 'totaldigits', 'fractiondigits', 'closed', 'extra'];","map":null,"metadata":{},"sourceType":"script"}