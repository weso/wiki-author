{"ast":null,"code":"import Editor from '../entities/editor';\nimport tokenUtils from './tokenUtils';\nimport Prefix from '../entities/shexEntities/shexUtils/prefix';\nconst DEFAULT_SHAPE = 'PREFIX :       <http://example.org/>\\n' + 'PREFIX schema: <http://schema.org/>\\n' + 'PREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>\\n\\n' + ':User IRI {\\n' + '  schema:name          xsd:string  ;\\n' + '  schema:birthDate     xsd:date?  ;\\n' + '  schema:birthPlace    xsd:string+  ;\\n' + '  schema:knows          @:User*  \\n' + '}';\nconst VALUESET_SHAPE = 'PREFIX :       <http://example.org/>\\n' + 'PREFIX schema: <http://schema.org/>\\n' + 'PREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>\\n\\n' + ':User IRI {\\n' + '  schema:name          [xsd:string 34 \"esd\" <asds> false ] ;\\n' + '}';\nlet prefixCount = 0;\n\nfunction replaceShapes() {\n  let tokens = tokenUtils.getTokens();\n  let defShapes = tokenUtils.getDefinedShapes(tokens);\n  let newShapes = tokenUtils.getShapes(defShapes);\n  tokenUtils.updateShapeRefs(newShapes);\n  return newShapes;\n}\n\nfunction updatePrefixes(prefix) {\n  let defined = Editor.getInstance().getYashe().getDefinedPrefixes();\n  let prefixes = [];\n  Object.keys(defined).map(p => {\n    let id = prefixes.length + prefixCount++;\n    prefixes.push(new Prefix(p, defined[p], id));\n  });\n  return prefixes;\n}\n\nfunction getSchema() {\n  let yashe = Editor.getInstance().getYashe();\n\n  if (yashe) {\n    return yashe.getValue();\n  }\n\n  return '';\n} //Get this out\n\n\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  let result;\n  return function () {\n    const context = this;\n    const args = arguments;\n\n    const later = function () {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) result = func.apply(context, args);\n    return result;\n  };\n}\n\n;\nconst yasheUtils = {\n  DEFAULT_SHAPE: DEFAULT_SHAPE,\n  VALUESET_SHAPE: VALUESET_SHAPE,\n  replaceShapes: replaceShapes,\n  updatePrefixes: updatePrefixes,\n  getSchema: getSchema,\n  debounce: debounce\n};\nexport default yasheUtils;","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/utils/yasheUtils.js"],"names":["Editor","tokenUtils","Prefix","DEFAULT_SHAPE","VALUESET_SHAPE","prefixCount","replaceShapes","tokens","getTokens","defShapes","getDefinedShapes","newShapes","getShapes","updateShapeRefs","updatePrefixes","prefix","defined","getInstance","getYashe","getDefinedPrefixes","prefixes","Object","keys","map","p","id","length","push","getSchema","yashe","getValue","debounce","func","wait","immediate","timeout","result","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","yasheUtils"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,MAAMC,aAAa,GAAG,2CACtB,uCADsB,GAEtB,wDAFsB,GAItB,eAJsB,GAKtB,wCALsB,GAMtB,uCANsB,GAOtB,yCAPsB,GAQtB,qCARsB,GAStB,GATA;AAWA,MAAMC,cAAc,GAAG,2CACvB,uCADuB,GAEvB,wDAFuB,GAIvB,eAJuB,GAKvB,gEALuB,GAMvB,GANA;AASE,IAAIC,WAAW,GAAG,CAAlB;;AAEA,SAASC,aAAT,GAAwB;AACtB,MAAIC,MAAM,GAAGN,UAAU,CAACO,SAAX,EAAb;AACA,MAAIC,SAAS,GAAGR,UAAU,CAACS,gBAAX,CAA4BH,MAA5B,CAAhB;AACA,MAAII,SAAS,GAAGV,UAAU,CAACW,SAAX,CAAqBH,SAArB,CAAhB;AAEAR,EAAAA,UAAU,CAACY,eAAX,CAA2BF,SAA3B;AAEA,SAAOA,SAAP;AACD;;AAEF,SAASG,cAAT,CAAwBC,MAAxB,EAA+B;AAC5B,MAAIC,OAAO,GAAGhB,MAAM,CAACiB,WAAP,GAAqBC,QAArB,GAAgCC,kBAAhC,EAAd;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,GAArB,CAAyBC,CAAC,IAAG;AAC3B,QAAIC,EAAE,GAAGL,QAAQ,CAACM,MAAT,GAAkBrB,WAAW,EAAtC;AACAe,IAAAA,QAAQ,CAACO,IAAT,CAAc,IAAIzB,MAAJ,CAAWsB,CAAX,EAAaR,OAAO,CAACQ,CAAD,CAApB,EAAwBC,EAAxB,CAAd;AACD,GAHD;AAIA,SAAOL,QAAP;AACH;;AAED,SAASQ,SAAT,GAAoB;AAChB,MAAIC,KAAK,GAAG7B,MAAM,CAACiB,WAAP,GAAqBC,QAArB,EAAZ;;AACA,MAAGW,KAAH,EAAS;AACL,WAAOA,KAAK,CAACC,QAAN,EAAP;AACH;;AACD,SAAO,EAAP;AACD,C,CAGH;;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyC;AACrC,MAAIC,OAAJ;AAAa,MAAIC,MAAJ;AACb,SAAO,YAAW;AACd,UAAMC,OAAO,GAAG,IAAhB;AACA,UAAMC,IAAI,GAAGC,SAAb;;AACA,UAAMC,KAAK,GAAG,YAAW;AACzBL,MAAAA,OAAO,GAAG,IAAV;AACA,UAAI,CAACD,SAAL,EAAgBE,MAAM,GAAGJ,IAAI,CAACS,KAAL,CAAWJ,OAAX,EAAoBC,IAApB,CAAT;AACf,KAHD;;AAIA,UAAMI,OAAO,GAAGR,SAAS,IAAI,CAACC,OAA9B;AACAQ,IAAAA,YAAY,CAACR,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGS,UAAU,CAACJ,KAAD,EAAQP,IAAR,CAApB;AACA,QAAIS,OAAJ,EAAaN,MAAM,GAAGJ,IAAI,CAACS,KAAL,CAAWJ,OAAX,EAAoBC,IAApB,CAAT;AACb,WAAOF,MAAP;AACH,GAZD;AAaH;;AAAA;AAEA,MAAMS,UAAU,GAAG;AACd1C,EAAAA,aAAa,EAACA,aADA;AAEdC,EAAAA,cAAc,EAACA,cAFD;AAGdE,EAAAA,aAAa,EAACA,aAHA;AAIdQ,EAAAA,cAAc,EAACA,cAJD;AAKdc,EAAAA,SAAS,EAACA,SALI;AAMdG,EAAAA,QAAQ,EAACA;AANK,CAAnB;AASC,eAAec,UAAf","sourcesContent":["import Editor from '../entities/editor';\nimport tokenUtils from './tokenUtils';\nimport Prefix from '../entities/shexEntities/shexUtils/prefix';\n\nconst DEFAULT_SHAPE = 'PREFIX :       <http://example.org/>\\n'+\n'PREFIX schema: <http://schema.org/>\\n'+\n'PREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>\\n\\n'+\n\n':User IRI {\\n'+ \n'  schema:name          xsd:string  ;\\n'+\n'  schema:birthDate     xsd:date?  ;\\n'+\n'  schema:birthPlace    xsd:string+  ;\\n'+\n'  schema:knows          @:User*  \\n'+\n'}';\n  \nconst VALUESET_SHAPE = 'PREFIX :       <http://example.org/>\\n'+\n'PREFIX schema: <http://schema.org/>\\n'+\n'PREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>\\n\\n'+\n\n':User IRI {\\n'+ \n'  schema:name          [xsd:string 34 \"esd\" <asds> false ] ;\\n'+\n'}';\n  \n\n  let prefixCount = 0;\n  \n  function replaceShapes(){\n    let tokens = tokenUtils.getTokens();\n    let defShapes = tokenUtils.getDefinedShapes(tokens);\n    let newShapes = tokenUtils.getShapes(defShapes);\n \n    tokenUtils.updateShapeRefs(newShapes);\n\n    return newShapes;\n  }\n\n function updatePrefixes(prefix){\n    let defined = Editor.getInstance().getYashe().getDefinedPrefixes();\n    let prefixes = [];\n    Object.keys(defined).map(p =>{\n      let id = prefixes.length + prefixCount++;\n      prefixes.push(new Prefix(p,defined[p],id));\n    })\n    return prefixes;\n}\n\nfunction getSchema(){\n    let yashe = Editor.getInstance().getYashe();\n    if(yashe){\n        return yashe.getValue();\n    }\n    return '';\n  }\n\n\n//Get this out\nfunction debounce(func, wait, immediate) {\n    let timeout; let result;\n    return function() {\n        const context = this; \n        const args = arguments;\n        const later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(context, args);\n        return result;\n    };\n};\n\n const yasheUtils = {\n      DEFAULT_SHAPE:DEFAULT_SHAPE,\n      VALUESET_SHAPE:VALUESET_SHAPE,\n      replaceShapes:replaceShapes,\n      updatePrefixes:updatePrefixes,\n      getSchema:getSchema,\n      debounce:debounce\n  }\n\n  export default yasheUtils;\n"]},"metadata":{},"sourceType":"module"}