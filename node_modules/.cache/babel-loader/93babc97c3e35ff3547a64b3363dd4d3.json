{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/wiki-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/ShapeComponent.js\";\nimport React, { useContext, useState } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { AppContext } from '../../../../../App';\nimport ShapeHeader from './headers/ShapeHeader';\nimport TripleComponent from './TripleComponent';\nimport Triple from '../../../../../entities/shexEntities/triple';\nimport Properties from '../../../../../conf/properties';\nexport const ShapeContext = React.createContext();\n\nfunction ShapeComponent(props) {\n  const context = useContext(AppContext);\n  const shape = props.shape;\n  const styles = Properties.getInstance().getShapeStyle();\n\n  const _useState = useState(shape.triples),\n        _useState2 = _slicedToArray(_useState, 2),\n        triples = _useState2[0],\n        setTriples = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isTriplesOpen = _useState4[0],\n        setTriplesOpen = _useState4[1];\n\n  const _useState5 = useState('menu_open'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        colapseBtn = _useState6[0],\n        setColapseBtn = _useState6[1];\n\n  let initialDisabled = false;\n  if (shape.type.value == '') initialDisabled = true;\n\n  const _useState7 = useState(initialDisabled),\n        _useState8 = _slicedToArray(_useState7, 2),\n        disabled = _useState8[0],\n        setDisabled = _useState8[1];\n\n  const addTriple = function () {\n    const id = shape.getTriplesCount();\n    const triple = new Triple(id);\n    setTriples([...triples, triple]);\n    shape.addTriple(triple);\n    context.emit();\n  };\n\n  const deleteTriple = function (tripleId) {\n    const newTriples = shape.triples.filter(triple => triple.id != tripleId);\n    setTriples(newTriples);\n    shape.setTriples(newTriples);\n    context.emit();\n  };\n\n  const collapseTriples = function () {\n    setTriplesOpen(!isTriplesOpen);\n\n    if (colapseBtn == 'menu') {\n      setColapseBtn('menu_open');\n    } else {\n      setColapseBtn('menu');\n    }\n  };\n\n  return React.createElement(ShapeContext.Provider, {\n    value: {\n      disabled: disabled,\n      setDisabled: setDisabled\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"shape\",\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ShapeHeader, {\n    shape: shape,\n    collapseTriples: collapseTriples,\n    colapseBtn: colapseBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: isTriplesOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"triples\",\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, triples.map(triple => React.createElement(TripleComponent, {\n    key: triple.id,\n    shape: shape,\n    triple: triple,\n    deleteTriple: deleteTriple,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"xs-addTripleButton\",\n    style: styles.addTriple,\n    onClick: addTriple,\n    disabled: disabled,\n    title: \"Add Triple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"+ Triple Constraint\")))));\n}\n\nexport default ShapeComponent;\n/*\n\n\n                     <div className=\"triples\">\n                        <div className=\"tripleSlot\">\n                        <label>TripleSlot</label>\n                        {triples.map(triple =>\n                            <TripleComponent key={triple.id}\n                                            shape={shape} \n                                            triple={triple}\n                                            deleteTriple={deleteTriple}/> \n                        )}\n                    \n                        <button className=\"xs-addTripleButton\" \n                                onClick={addTriple} \n                                disabled={disabled}\n                                title=\"Add Triple\">\n                                + Triple Constraint\n                        </button>        \n                    \n                        </div>\n                    </div> <div className=\"triples\">\n                        <div className=\"tripleSlot\">\n                        <label>TripleSlot</label>\n                        {triples.map(triple =>\n                            <TripleComponent key={triple.id}\n                                            shape={shape} \n                                            triple={triple}\n                                            deleteTriple={deleteTriple}/> \n                        )}\n                    \n                        <button className=\"xs-addTripleButton\" \n                                onClick={addTriple} \n                                disabled={disabled}\n                                title=\"Add Triple\">\n                                + Triple Constraint\n                        </button>        \n                    \n                        </div>\n                    </div>\n\n                    */","map":{"version":3,"sources":["/home/mistermboy/repositories/wiki-author/src/components/mainComps/assistant/tabs/shEx/ShapeComponent.js"],"names":["React","useContext","useState","Collapse","AppContext","ShapeHeader","TripleComponent","Triple","Properties","ShapeContext","createContext","ShapeComponent","props","context","shape","styles","getInstance","getShapeStyle","triples","setTriples","isTriplesOpen","setTriplesOpen","colapseBtn","setColapseBtn","initialDisabled","type","value","disabled","setDisabled","addTriple","id","getTriplesCount","triple","emit","deleteTriple","tripleId","newTriples","filter","collapseTriples","header","body","map"],"mappings":"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","sourcesContent":["import React,{useContext,useState} from 'react';\nimport { Collapse } from 'reactstrap';\nimport {AppContext} from '../../../../../App';\nimport ShapeHeader from  './headers/ShapeHeader';\nimport TripleComponent from './TripleComponent';\nimport Triple from '../../../../../entities/shexEntities/triple';\nimport Properties from '../../../../../conf/properties';\n\nexport const ShapeContext = React.createContext();\n\nfunction ShapeComponent (props) {\n\n    const context = useContext(AppContext);\n    const {shape} = props;\n    const styles = Properties.getInstance().getShapeStyle();\n\n    const [triples,setTriples] = useState(shape.triples);\n    const [isTriplesOpen,setTriplesOpen] = useState(true);\n    const [colapseBtn,setColapseBtn] = useState('menu_open');\n\n    let initialDisabled = false;\n    if(shape.type.value == '')initialDisabled = true;\n    const [disabled,setDisabled] = useState(initialDisabled);\n\n\n    const addTriple = function(){\n        const id = shape.getTriplesCount();\n        const triple = new Triple(id);\n\n        setTriples([...triples,triple]);\n        \n        shape.addTriple(triple);\n        context.emit();       \n    }\n\n    const deleteTriple = function(tripleId){\n        const newTriples = shape.triples.filter( triple => triple.id != tripleId);\n        setTriples(newTriples)\n        shape.setTriples(newTriples);\n        context.emit();\n        \n    }\n\n\n\n    const collapseTriples = function(){\n        setTriplesOpen(!isTriplesOpen);\n        \n        if(colapseBtn=='menu'){\n            setColapseBtn('menu_open');\n        }else{\n            setColapseBtn('menu');\n        }\n    }\n\n    return (\n\n        <ShapeContext.Provider value={{disabled:disabled,setDisabled:setDisabled}}>\n            <div className=\"shape\" style={styles.header}>\n                <ShapeHeader shape={shape} \n                            collapseTriples={collapseTriples} \n                            colapseBtn={colapseBtn}/>\n\n                    \n                <Collapse  isOpen={isTriplesOpen}>\n                     <div className=\"triples\" style={styles.body}>\n                        {triples.map(triple =>\n                            <TripleComponent key={triple.id}\n                                            shape={shape} \n                                            triple={triple}\n                                            deleteTriple={deleteTriple}/> \n                        )}\n                    \n                        <button className=\"xs-addTripleButton\"\n                                style={styles.addTriple} \n                                onClick={addTriple} \n                                disabled={disabled}\n                                title=\"Add Triple\">\n                                + Triple Constraint\n                        </button>        \n                    \n                        </div>\n                </Collapse> \n            </div>\n        </ShapeContext.Provider>\n    );\n                                   \n    \n}\n\n\nexport default ShapeComponent;\n\n/*\n\n\n                     <div className=\"triples\">\n                        <div className=\"tripleSlot\">\n                        <label>TripleSlot</label>\n                        {triples.map(triple =>\n                            <TripleComponent key={triple.id}\n                                            shape={shape} \n                                            triple={triple}\n                                            deleteTriple={deleteTriple}/> \n                        )}\n                    \n                        <button className=\"xs-addTripleButton\" \n                                onClick={addTriple} \n                                disabled={disabled}\n                                title=\"Add Triple\">\n                                + Triple Constraint\n                        </button>        \n                    \n                        </div>\n                    </div> <div className=\"triples\">\n                        <div className=\"tripleSlot\">\n                        <label>TripleSlot</label>\n                        {triples.map(triple =>\n                            <TripleComponent key={triple.id}\n                                            shape={shape} \n                                            triple={triple}\n                                            deleteTriple={deleteTriple}/> \n                        )}\n                    \n                        <button className=\"xs-addTripleButton\" \n                                onClick={addTriple} \n                                disabled={disabled}\n                                title=\"Add Triple\">\n                                + Triple Constraint\n                        </button>        \n                    \n                        </div>\n                    </div>\n\n                    */"]},"metadata":{},"sourceType":"module"}